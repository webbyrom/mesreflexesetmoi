/**
 * @preserve
 * @author    ThemePunch <info@themepunch.com>
 * @link      http://www.themepunch.com/
 * @copyright 2022 ThemePunch
 * @version 1.0.0
 */
!function(){"use strict";window._R_is_Editor?RVS._R=void 0===RVS._R?{}:RVS._R:window._R_is_Editor=!1,jQuery.fn.revolution=jQuery.fn.revolution||{};var t=window._R_is_Editor?RVS._R:jQuery.fn.revolution;function i(t){if("string"!=typeof t)throw"Passed color was not a String";if(t.includes("#")){t=tpGS.gsap.utils.splitColor(t);for(let i=0;i<t.length;i++)t[i]/=255;t.push(1)}if(t.includes("rgba")){t=tpGS.gsap.utils.splitColor(t);for(let i=0;i<t.length-1;i++)t[i]/=255;t.length<=3&&(t[3]=1)}return t}function e(t){this.id=-1,this.texcoordX=Math.random(),this.texcoordY=Math.random(),this.prevTexcoordX=0,this.prevTexcoordY=0,this.deltaX=0,this.deltaY=0,this.moved=!1,this.color=[0,0,0,1],this.add=!1,this.pathDestination=new THREE.Vector2,this.angle=Math.floor(360*Math.random()),f(this.pathDestination,this.angle),this.pathDestinationVZ_X=1,this.pathDestinationVZ_Y=1}jQuery.extend(!0,t,{fluidDynamicsBuild:{getBasics:function(t){return{densityDissipation:69,velocityDissipation:96,pressureDissipation:75,followMouse:"mGenerator",followAMGen:"",automateSel:"off",curlVal:15,allColorCount:2,fd_color1:"#ff0000",fd_color2:"#0000ff",fd_color3:"#2dfd67",maxOpacityValue:80,mousePower:20,splatRadius:20,colorFade:!1,directionChooser:"lr",simuDelay:0,simuLength:36,simuWait:40,simuPower:50,simuRadius:50,colDirectionChooser:"lr",colorChangeType:"timed",colorChangeLenth:1.5,colorFull:!1,vecLength:50,glow:!1,qualityFluid:100,dprFluid:"auto",dprOnMobile:!1,qualityFluidMobile:100,dprFluidMobile:1}}},fluidDynamicsInit:function(i,e){t.fluidDynamicsUrl=void 0===e.url?"":e.url,THREE.Cache.enabled=!0,t.fluidDynamicsUtils.observe(i)},fluidDynamicsUtils:{observe:function(i){t[i].c.on("layerinitialised",(function(e,n){void 0!==t[i]._L[n.layer]&&t[i]._L[n.layer].c[0].className.indexOf("tp-fluiddynamics")>=0&&t.fluidDynamicsUtils.initLayer(i,n.layer)})),t[i].c.on("revolution.layeraction",(function(e,n){if(null!=t[i]._L[n.layerid]&&-1!==t[i]._L[n.layerid].c[0].className.indexOf("tp-fluiddynamics"))if("enterstage"===n.eventtype)t[i]._L[n.layerid].fluidDynamicsInited?null==t[i]._L[n.layerid].fluidDynamics&&(t.fluidDynamicsUtils.initLayer(i,n.layerid),t.fluidDynamicsUtils.setLayer(t[i]._L[n.layerid])):(t[i]._L[n.layerid].fluidDynamicsInited=!0,t.fluidDynamicsUtils.setLayer(t[i]._L[n.layerid])),t[i]._L[n.layerid].fluidDynamics.pauseTimer&&t[i]._L[n.layerid].fluidDynamics.pauseTimer.kill&&t[i]._L[n.layerid].fluidDynamics.pauseTimer.kill();else if("leavestage"===n.eventtype&&t[i]._L[n.layerid]&&t[i]._L[n.layerid].fluidDynamics&&t[i]._L[n.layerid].fluidDynamics.fD){var s=t[i]._L[n.layerid].fluidDynamics.fD;t[i]._L[n.layerid].fluidDynamics.pauseTimer=tpGS.gsap.delayedCall(t[i]._L[n.layerid].frames.frame_999.timeline.speed/1e3,(function(){s.paused=!0,s.frame=cancelAnimationFrame(s.frame),s.destroy(),t[i]._L[n.layerid].fluidDynamics=void 0}))}})),t[i].c.on("leftviewport",(function(){for(var e in t[i]._L)if(t[i]._L.hasOwnProperty(e)&&t[i]._L[e]&&t[i]._L[e].fluidDynamics&&t[i]._L[e].fluidDynamics.fD){var n=t[i]._L[e].fluidDynamics.fD;n.paused=!0,n.frame=cancelAnimationFrame(n.frame)}})).on("enterviewport",(function(){for(var e in t[i]._L)if(t[i]._L.hasOwnProperty(e)&&t[i]._L[e]&&t[i].pr_active_key==t[i]._L[e].slideIndex&&-1!==t[i]._L[e].c[0].className.indexOf("tp-fluiddynamics")&&void 0!==t[i]._L[e].fluidDynamics){var n=t[i]._L[e].fluidDynamics.fD;n.paused=!1,n.frame=requestAnimationFrame(n.bindedRender)}}))},initLayer:function(i,e){if(null==t[i]._L[e]||void 0===t[i]._L[e].fluidDynamics){var n,s,a=t[i]._L[e];a.fluidDynamics=t.fluidDynamicsUtils.getWebGLCanvas(),a.fluidDynamics=jQuery.extend(!0,a.fluidDynamics,t.fluidDynamicsBuild.getBasics(!0));var o=a.fluidDynamics;if(o.sid=i,o.lid=e,o.sliderId=i,void 0!==a.wpsdata)for(n in a.wpsdata="object"==typeof a.wpsdata?a.wpsdata:a.wpsdata.split(";"),a.wpsdata)if(a.wpsdata.hasOwnProperty(n))if((a.wpsdata[n]+"").indexOf("{")>=0)0==(a.wpsdata[n]+"").indexOf("pc:")&&(o.tc_mainColor=(a.wpsdata[n]+"").replace("pc:",""));else switch((s=a.wpsdata[n].split(":"))[0]){case"mf":o.followMouse=s[1];break;case"mfa":o.followAMGen=s[1];break;case"sa":o.automateSel=s[1];break;case"mc":o.curlVal=s[1];break;case"cc":o.allColorCount=s[1];break;case"c1":o.fd_color1=s[1];break;case"c2":o.fd_color2=s[1];break;case"c3":o.fd_color3=s[1];break;case"c4":o.fd_color4=s[1];break;case"c5":o.fd_color5=s[1];break;case"c6":o.fd_color6=s[1];break;case"cm":o.maxOpacityValue=s[1];break;case"mp":o.mousePower=s[1];break;case"ms":o.splatRadius=s[1];break;case"md":o.densityDissipation=s[1];break;case"mv":o.velocityDissipation=s[1];break;case"mr":o.pressureDissipation=s[1];break;case"cf":o.colorFade=s[1];break;case"sd":o.directionChooser=s[1];break;case"sy":o.simuDelay=s[1];break;case"sl":o.simuLength=s[1];break;case"sw":o.simuWait=s[1];break;case"sp":o.simuPower=s[1];break;case"sr":o.simuRadius=s[1];break;case"sc":o.colDirectionChooser=s[1];break;case"ct":o.colorChangeType=s[1];break;case"cl":o.colorChangeLenth=s[1];break;case"cu":o.colorFull=s[1];break;case"sv":o.vecLength=s[1];break;case"cg":o.glow=s[1];break;case"mq":o.qualityFluid=s[1];break;case"mdpr":o.dprFluid=s[1];break;case"mom":o.dprOnMobile=s[1];break;case"mqm":o.qualityFluidMobile=s[1];break;case"mdpm":o.dprFluidMobile=s[1]}a.c.find("canvas").remove(),a.c[0].appendChild(o.canvas)}},initBackendLayer:function(i){if(_R_is_Editor&&RVS.LIB.RSFLUIDDYNAMICS&&RVS.LIB.RSFLUIDDYNAMICS[i]&&RVS.LIB.RSFLUIDDYNAMICS[i].fluidDynamics){var e=RVS.LIB.RSFLUIDDYNAMICS[i].fluidDynamics;e.initCall&&e.initCall.kill(),e&&e.fD&&e.fD.destroy&&e.fD.destroy()}if(void 0!==RVS&&void 0!==RVS.L&&void 0!==RVS.L[i]&&null!=RVS.L[i].addOns["revslider-fluiddynamics-addon"]){var n={};_R_is_Editor&&(void 0===RVS.LIB.RSFLUIDDYNAMICS&&(RVS.LIB.RSFLUIDDYNAMICS={}),RVS.LIB.RSFLUIDDYNAMICS[i]=n),n.fluidDynamics=t.fluidDynamicsUtils.getWebGLCanvas(),n.fluidDynamics=jQuery.extend(!0,RVS._R.fluidDynamicsBuild.getBasics(),n.fluidDynamics),n.fluidDynamics=jQuery.extend(!0,n.fluidDynamics,RVS.L[i].addOns["revslider-fluiddynamics-addon"]),n.lid=i,n.fluidDynamics.initCall=tpGS.gsap.delayedCall(.3,(function(){RVS.L[i]&&(n.eow=RVS.L[i].size.width[RVS.screen].v.indexOf&&-1!==RVS.L[i].size.width[RVS.screen].v.indexOf("%")?RVS.H[i].c.width():parseInt(RVS.L[i].size.width[RVS.screen].v,0),n.eoh=RVS.L[i].size.height[RVS.screen].v.indexOf&&-1!==RVS.L[i].size.height[RVS.screen].v.indexOf("%")?RVS.H[i].c.height():parseInt(RVS.L[i].size.height[RVS.screen].v,0),RVS.H[i].c[0].appendChild(n.fluidDynamics.canvas),t.fluidDynamicsUtils.layers=void 0===t.fluidDynamicsUtils.layers?{}:t.fluidDynamicsUtils.layers,n.fluidDynamics.id=RVS.S.slideId,n.fluidDynamics.lid=i,t.fluidDynamicsUtils.layers[RVS.S.slideId+"_"+i]=n,t.fluidDynamicsUtils.setLayer(n))}))}},returnL:function(t){return t},setLayer:function(t){_R_is_Editor&&void 0===RVS.ENV.FLUIDDYNAMICS_URL&&(RVS.ENV.FLUIDDYNAMICS_URL="//"+window.location.host+"/wp-content/plugins/revslider-fluiddynamics-addon/");var e=t.fluidDynamics;e.curlVal=parseFloat(e.curlVal),e.maxOpacityValue=parseFloat(e.maxOpacityValue),e.mousePower=parseFloat(e.mousePower),e.simuDelay=parseFloat(e.simuDelay),e.simuLength=parseFloat(e.simuLength),e.simuWait=parseFloat(e.simuWait),e.simuPower=parseFloat(e.simuPower),e.simuRadius=parseFloat(e.simuRadius),e.densityDissipation=parseFloat(e.densityDissipation),e.velocityDissipation=parseFloat(e.velocityDissipation),e.pressureDissipation=parseFloat(e.pressureDissipation),e.splatRadius=parseFloat(e.splatRadius),e.colorChangeLenth=parseFloat(e.colorChangeLenth),e.vecLength=parseFloat(e.vecLength),e.qualityFluid=parseFloat(e.qualityFluid),e.qualityFluidMobile=parseFloat(e.qualityFluidMobile),e.settings={},e.settings.automateSel=e.automateSel,e.settings.followMouse=e.followMouse,e.settings.followAMGen=""!==e.followAMGen?e.followAMGen:"mGeneratorSimu"==e.followMouse?"mGeneratorSimu":"off",e.settings.curlVal=e.curlVal,e.settings.allColorCount=e.allColorCount-1,e.settings.fd_color1=i(_R_is_Editor?RSColor.get(e.fd_color1):e.fd_color1),e.settings.fd_color2=i(_R_is_Editor?RSColor.get(e.fd_color2):e.fd_color2),e.settings.fd_color3=i(_R_is_Editor?RSColor.get(e.fd_color3):e.fd_color3),e.settings.maxOpacityValue=e.settings.colorFull?e.maxOpacityValue/300:e.maxOpacityValue/100,S(e.settings.fd_color1,e.settings.maxOpacityValue),S(e.settings.fd_color2,e.settings.maxOpacityValue),S(e.settings.fd_color3,e.settings.maxOpacityValue),e.settings.mousePower=e.mousePower/30,e.settings.colorFade=e.colorFade,e.settings.directionChooser=e.directionChooser,e.settings.vec2=new THREE.Vector2,e.settings.startPos2=new THREE.Vector2,e.settings.startPosNegate=new THREE.Vector2,e.settings.simuDelay=e.simuDelay+1,e.settings.simuLength=e.simuLength+1,e.settings.simuWait=e.simuWait+1,e.settings.simuPower=e.simuPower/100,e.settings.simuRadius=e.simuRadius,e.settings.colDirectionChooser=e.colDirectionChooser,e.settings.densityDissipation=.89+e.densityDissipation/100*.1,e.settings.velocityDissipation=.89+e.velocityDissipation/100*.1,e.settings.pressureDissipation=e.pressureDissipation/100,e.settings.PRESSURE_ITERATIONS=10,e.settings.splatRadius="mist"==e.automateSel?e.splatRadius/100:e.splatRadius/1250,e.settings.colorChangeType=e.colorChangeType,e.settings.colorChangeLenth=e.colorChangeLenth,e.settings.colorFull=e.colorFull,e.settings.vecLength=e.vecLength,e.settings.glow=e.glow,e.COUNTER=0,e.COUNTER_2=0,e.dt=.016,e.settings.lid=e.lid,null==e.fD&&(e.fD=new s(t,e.lid,e.sid)),e.fD.paused=!1,cancelAnimationFrame(e.fD.frame),e.fD.destroyed||(e.fD.frame=requestAnimationFrame(e.fD.bindedRender))},fitCameraToObject:function(t){var i,e,n=t.fluidDynamics;t.fluidDynamics.fD&&t.c&&(window._R_is_Editor?(i=Math.round(RVS.H[t.lid].c[0].clientWidth),e=Math.round(RVS.H[t.lid].c[0].clientHeight)):(i=Math.round(t.eow),e=Math.round(t.eoh)),i=isNaN(i)?0:i,e=n.settings.height=isNaN(e)?0:e,n.lastDim={width:i,height:e},n.fD.paused=!1,cancelAnimationFrame(n.fD.frame),n.fD.destroyed||(n.fD.frame=requestAnimationFrame(n.fD.bindedRender)))},updateLayer:function(i,e,n,s,a){void 0!==t.fluidDynamicsUtils.layers[i+"_"+e]&&(t.fluidDynamicsUtils.layers[i+"_"+e].fluidDynamics[n]=s,function(t){switch(t.fluidDynamics.settings.densityDissipation=.89+parseFloat(t.fluidDynamics.densityDissipation)/100*.1,t.fluidDynamics.settings.velocityDissipation=.89+parseFloat(t.fluidDynamics.velocityDissipation)/100*.1,t.fluidDynamics.settings.pressureDissipation=parseFloat(t.fluidDynamics.pressureDissipation)/100,t.fluidDynamics.settings.mousePower=parseFloat(t.fluidDynamics.mousePower)/30,t.fluidDynamics.settings.curlVal=parseFloat(t.fluidDynamics.curlVal),t.fluidDynamics.settings.splatRadius="mist"==t.fluidDynamics.automateSel?parseFloat(t.fluidDynamics.splatRadius)/100:parseFloat(t.fluidDynamics.splatRadius)/1250,t.fluidDynamics.settings.colorChangeLenth=parseFloat(t.fluidDynamics.colorChangeLenth),t.fluidDynamics.settings.simuLength=parseFloat(t.fluidDynamics.simuLength)+1,t.fluidDynamics.settings.simuDelay=parseFloat(t.fluidDynamics.simuDelay)+1,t.fluidDynamics.settings.simuWait=parseFloat(t.fluidDynamics.simuWait)+1,t.fluidDynamics.settings.simuPower=parseFloat(t.fluidDynamics.simuPower)/100,t.fluidDynamics.settings.simuRadius=parseFloat(t.fluidDynamics.simuRadius),t.fluidDynamics.settings.vecLength=parseFloat(t.fluidDynamics.vecLength),t.fluidDynamics.COUNTER=0,t.fluidDynamics.COUNTER_2=0,t.fluidDynamics.settings.automateSel){case"shoot":c(t);break;case"swipe":u(t);break;case"collision":d(t)}}(t.fluidDynamicsUtils.layers[i+"_"+e]))},updateLayerColors:function(e,n,s,a,o){void 0!==t.fluidDynamicsUtils.layers[e+"_"+n]&&(t.fluidDynamicsUtils.layers[e+"_"+n].fluidDynamics[s]=a,function(t){t.fluidDynamics.settings.maxOpacityValue=t.fluidDynamics.settings.colorFull?parseFloat(t.fluidDynamics.maxOpacityValue)/300:parseFloat(t.fluidDynamics.maxOpacityValue)/100,t.fluidDynamics.settings.fd_color1=i(_R_is_Editor?RSColor.get(t.fluidDynamics.fd_color1):t.fluidDynamics.fd_color1),t.fluidDynamics.settings.fd_color2=i(_R_is_Editor?RSColor.get(t.fluidDynamics.fd_color2):t.fluidDynamics.fd_color2),t.fluidDynamics.settings.fd_color3=i(_R_is_Editor?RSColor.get(t.fluidDynamics.fd_color3):t.fluidDynamics.fd_color3),S(t.fluidDynamics.settings.fd_color1,t.fluidDynamics.settings.maxOpacityValue),S(t.fluidDynamics.settings.fd_color2,t.fluidDynamics.settings.maxOpacityValue),S(t.fluidDynamics.settings.fd_color3,t.fluidDynamics.settings.maxOpacityValue)}(t.fluidDynamicsUtils.layers[e+"_"+n]))},getWebGLCanvas:function(){let t=document.createElement("canvas");return t.style.width="100%",t.style.height="100%",t.style.position="absolute",t.style.top="0px",t.style.left="0px",t.style.zIndex=2,t.width=1600,t.height=1200,{canvas:t}}}});const n={shoot:function(t,i,e,n){t.fluidDynamics.COUNTER<e&&(t.fluidDynamics.pointers[0].moved=!0,t.fluidDynamics.pointers[0].prevTexcoordX=t.fluidDynamics.pointers[0].texcoordX,t.fluidDynamics.pointers[0].prevTexcoordY=t.fluidDynamics.pointers[0].texcoordY,t.fluidDynamics.pointers[0].texcoordX+=t.fluidDynamics.settings.vec2.x*t.fluidDynamics.settings.simuPower*10/t.fluidDynamics.canvas.width,t.fluidDynamics.pointers[0].texcoordY+=t.fluidDynamics.settings.vec2.y*t.fluidDynamics.settings.simuPower*10/t.fluidDynamics.canvas.height,t.fluidDynamics.pointers[0].deltaX=(t.fluidDynamics.pointers[0].texcoordX-t.fluidDynamics.pointers[0].prevTexcoordX)*t.fluidDynamics.settings.simuPower*10,t.fluidDynamics.pointers[0].deltaY=(t.fluidDynamics.pointers[0].texcoordY-t.fluidDynamics.pointers[0].prevTexcoordY)*t.fluidDynamics.settings.simuPower*10,t.fluidDynamics.COUNTER++);t.fluidDynamics.COUNTER>=e&&t.fluidDynamics.COUNTER<e+i&&(c(t),t.fluidDynamics.COUNTER++);t.fluidDynamics.COUNTER>=e+i&&(t.fluidDynamics.COUNTER=0)},circle:function(t,i,e,n){n/=100;var s=t.fluidDynamics.COUNTER/100*Math.PI*2*e/50,a=Math.min(t.fluidDynamics.canvas.width,t.fluidDynamics.canvas.height)*n,o=t.fluidDynamics.canvas.width/2+Math.sin(s)*a/2,r=t.fluidDynamics.canvas.height/2+Math.cos(s)*a/2;t.fluidDynamics.pointers[0].moved=!0,t.fluidDynamics.pointers[0].prevTexcoordX=t.fluidDynamics.pointers[0].texcoordX,t.fluidDynamics.pointers[0].prevTexcoordY=t.fluidDynamics.pointers[0].texcoordY,t.fluidDynamics.pointers[0].texcoordX=o/t.fluidDynamics.canvas.width,t.fluidDynamics.pointers[0].texcoordY=r/t.fluidDynamics.canvas.height,t.fluidDynamics.pointers[0].deltaX=(t.fluidDynamics.pointers[0].texcoordX-t.fluidDynamics.pointers[0].prevTexcoordX)*t.fluidDynamics.settings.simuPower*1.5,t.fluidDynamics.pointers[0].deltaY=(t.fluidDynamics.pointers[0].texcoordY-t.fluidDynamics.pointers[0].prevTexcoordY)*t.fluidDynamics.settings.simuPower*1.5,t.fluidDynamics.COUNTER++},swipe:function(t,i,e,n){t.fluidDynamics.COUNTER<e&&(t.fluidDynamics.pointers[0].moved=!0,t.fluidDynamics.pointers[0].prevTexcoordX=t.fluidDynamics.pointers[0].texcoordX,t.fluidDynamics.pointers[0].prevTexcoordY=t.fluidDynamics.pointers[0].texcoordY,t.fluidDynamics.pointers[0].texcoordX+=10*t.fluidDynamics.settings.vec2.x/t.fluidDynamics.canvas.width,t.fluidDynamics.pointers[0].texcoordY+=10*t.fluidDynamics.settings.vec2.y/t.fluidDynamics.canvas.height,t.fluidDynamics.pointers[0].deltaX=(t.fluidDynamics.pointers[0].texcoordX-t.fluidDynamics.pointers[0].prevTexcoordX)*t.fluidDynamics.settings.simuPower*10,t.fluidDynamics.pointers[0].deltaY=(t.fluidDynamics.pointers[0].texcoordY-t.fluidDynamics.pointers[0].prevTexcoordY)*t.fluidDynamics.settings.simuPower*10,t.fluidDynamics.COUNTER++);t.fluidDynamics.COUNTER>=e&&t.fluidDynamics.COUNTER<e+i&&(u(t),t.fluidDynamics.COUNTER++);t.fluidDynamics.COUNTER>=e+i&&(t.fluidDynamics.COUNTER=0)},collision:function(t,i,e,n){t.fluidDynamics.COUNTER<e&&(t.fluidDynamics.pointers[0].moved=!0,t.fluidDynamics.pointers[0].prevTexcoordX=t.fluidDynamics.pointers[0].texcoordX,t.fluidDynamics.pointers[0].prevTexcoordY=t.fluidDynamics.pointers[0].texcoordY,t.fluidDynamics.pointers[0].texcoordX+=10*t.fluidDynamics.settings.vec2.x/t.fluidDynamics.canvas.width,t.fluidDynamics.pointers[0].texcoordY+=10*t.fluidDynamics.settings.vec2.y/t.fluidDynamics.canvas.height,t.fluidDynamics.pointers[0].deltaX=(t.fluidDynamics.pointers[0].texcoordX-t.fluidDynamics.pointers[0].prevTexcoordX)*t.fluidDynamics.settings.simuPower*10,t.fluidDynamics.pointers[0].deltaY=(t.fluidDynamics.pointers[0].texcoordY-t.fluidDynamics.pointers[0].prevTexcoordY)*t.fluidDynamics.settings.simuPower*10,t.fluidDynamics.pointers[1].moved=!0,t.fluidDynamics.pointers[1].prevTexcoordX=t.fluidDynamics.pointers[0].texcoordX,t.fluidDynamics.pointers[1].prevTexcoordY=t.fluidDynamics.pointers[0].texcoordY,t.fluidDynamics.pointers[1].texcoordX+=-10*t.fluidDynamics.settings.vec2.x/t.fluidDynamics.canvas.width,t.fluidDynamics.pointers[1].texcoordY+=-10*t.fluidDynamics.settings.vec2.y/t.fluidDynamics.canvas.height,t.fluidDynamics.pointers[1].deltaX=-(t.fluidDynamics.pointers[0].texcoordX-t.fluidDynamics.pointers[0].prevTexcoordX)*t.fluidDynamics.settings.simuPower*10,t.fluidDynamics.pointers[1].deltaY=-(t.fluidDynamics.pointers[0].texcoordY-t.fluidDynamics.pointers[0].prevTexcoordY)*t.fluidDynamics.settings.simuPower*10,t.fluidDynamics.COUNTER++);t.fluidDynamics.COUNTER>=e&&t.fluidDynamics.COUNTER<e+i&&(d(t),t.fluidDynamics.COUNTER++);t.fluidDynamics.COUNTER>=e+i&&(t.fluidDynamics.COUNTER=0)},mist:function(t,i,e,n){for(let i=0;i<t.fluidDynamics.pointers.length-1;i++)if(t.fluidDynamics.COUNTER<e){t.fluidDynamics.COUNTER++;var s=Math.ceil(t.fluidDynamics.pointers.length/2)+2;i<=s&&((t.fluidDynamics.pointers[i].texcoordX<0||t.fluidDynamics.pointers[i].texcoordX>1)&&(t.fluidDynamics.pointers[i].pathDestinationVZ_X*=-1),(t.fluidDynamics.pointers[i].texcoordY<0||t.fluidDynamics.pointers[i].texcoordY>1)&&(t.fluidDynamics.pointers[i].pathDestinationVZ_Y*=-1),t.fluidDynamics.pointers[i].moved=!0,t.fluidDynamics.pointers[i].add=!0,t.fluidDynamics.pointers[i].prevTexcoordX=t.fluidDynamics.pointers[i].texcoordX,t.fluidDynamics.pointers[i].prevTexcoordY=t.fluidDynamics.pointers[i].texcoordY,t.fluidDynamics.pointers[i].texcoordX+=t.fluidDynamics.pointers[i].pathDestination.x*e/8*t.fluidDynamics.pointers[i].pathDestinationVZ_X/t.fluidDynamics.canvas.width,t.fluidDynamics.pointers[i].texcoordY=0,t.fluidDynamics.pointers[i].deltaX=(t.fluidDynamics.pointers[i].texcoordX-t.fluidDynamics.pointers[i].prevTexcoordX)*t.fluidDynamics.settings.simuPower/50,t.fluidDynamics.pointers[i].deltaY=t.fluidDynamics.settings.simuPower/50),i>s&&(t.fluidDynamics.pointers[i].moved=!0,t.fluidDynamics.pointers[i].add=!0,t.fluidDynamics.pointers[i].prevTexcoordX=t.fluidDynamics.pointers[i].texcoordX,t.fluidDynamics.pointers[i].prevTexcoordY=t.fluidDynamics.pointers[i].texcoordY,t.fluidDynamics.pointers[i].texcoordX=t.fluidDynamics.pointers[i-s].texcoordX,t.fluidDynamics.pointers[i].texcoordY=t.fluidDynamics.pointers[i-s].texcoordY,t.fluidDynamics.pointers[i].deltaX=t.fluidDynamics.pointers[i-s].deltaX,t.fluidDynamics.pointers[i].deltaY=t.fluidDynamics.pointers[i-s].deltaY)}else t.fluidDynamics.COUNTER=0,f(t.fluidDynamics.pointers[i].pathDestination,t.fluidDynamics.pointers[i].angle)},bounce:function(t,i,e,n){t.fluidDynamics.settings.vec2.set(1,1),t.fluidDynamics.COUNTER<e?(t.fluidDynamics.COUNTER++,(t.fluidDynamics.pointers[0].texcoordX<0||t.fluidDynamics.pointers[0].texcoordX>1)&&(t.fluidDynamics.pointers[0].pathDestinationVZ_X*=-1),(t.fluidDynamics.pointers[0].texcoordY<0||t.fluidDynamics.pointers[0].texcoordY>1)&&(t.fluidDynamics.pointers[0].pathDestinationVZ_Y*=-1),t.fluidDynamics.pointers[0].moved=!0,t.fluidDynamics.pointers[0].prevTexcoordX=t.fluidDynamics.pointers[0].texcoordX,t.fluidDynamics.pointers[0].prevTexcoordY=t.fluidDynamics.pointers[0].texcoordY,t.fluidDynamics.pointers[0].texcoordX+=t.fluidDynamics.settings.vec2.x*e/5*t.fluidDynamics.pointers[0].pathDestinationVZ_X/t.fluidDynamics.canvas.width,t.fluidDynamics.pointers[0].texcoordY+=t.fluidDynamics.settings.vec2.y*e/5*t.fluidDynamics.pointers[0].pathDestinationVZ_Y/t.fluidDynamics.canvas.height,t.fluidDynamics.pointers[0].deltaX=(t.fluidDynamics.pointers[0].texcoordX-t.fluidDynamics.pointers[0].prevTexcoordX)*t.fluidDynamics.settings.simuPower*10,t.fluidDynamics.pointers[0].deltaY=(t.fluidDynamics.pointers[0].texcoordY-t.fluidDynamics.pointers[0].prevTexcoordY)*t.fluidDynamics.settings.simuPower*10):t.fluidDynamics.COUNTER=0}};function s(i,n,s){this.lid=n,this.sid=s;let l=(navigator?.userAgent??"").includes("Firefox");if(!i||!i.fluidDynamics)return void this.destroy();if((i=r(this)).fluidDynamics.pointers=[],i.fluidDynamics.pointers.push(new e(i)),"collision"==i.fluidDynamics.settings.automateSel&&i.fluidDynamics.pointers.push(new e(i)),"mist"==i.fluidDynamics.settings.automateSel){for(let t=0;t<4;t++)i.fluidDynamics.pointers.push(new e(i));i.fluidDynamics.settings.PRESSURE_ITERATIONS=5}else i.fluidDynamics.settings.PRESSURE_ITERATIONS=10;"circle"==i.fluidDynamics.settings.automateSel?"mGeneratorSimu"==i.fluidDynamics.settings.followAMGen&&i.fluidDynamics.pointers.push(new e(i)):"mGeneratorSimu"==i.fluidDynamics.settings.followMouse&&i.fluidDynamics.pointers.push(new e(i)),i.fluidDynamics.utime=0,i.fluidDynamics.startTime=Date.now();let f=i.fluidDynamics.canvas;const{gl:y,ext:D}=function(t){const i={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1};let e=t.getContext("webgl2",i);const n=!!e;n||(e=t.getContext("webgl",i)||t.getContext("experimental-webgl",i));let s,a;n?(e.getExtension("EXT_color_buffer_float"),a=e.getExtension("OES_texture_float_linear")):(s=e.getExtension("OES_texture_half_float"),a=e.getExtension("OES_texture_half_float_linear"));e.clearColor(0,0,0,1);const o=n?e.HALF_FLOAT:s.HALF_FLOAT_OES;let r,l,c;n?(r=R(e,e.RGBA16F,e.RGBA,o),l=R(e,e.RG16F,e.RG,o),c=R(e,e.R16F,e.RED,o)):(r=R(e,e.RGBA,e.RGBA,o),l=R(e,e.RGBA,e.RGBA,o),c=R(e,e.RGBA,e.RGBA,o));return{gl:e,ext:{formatRGBA:r,formatRG:l,formatR:c,halfFloatTexType:o,supportLinearFiltering:a}}}(f);let S,E,_,w,L;this.gl=i.fluidDynamics.gl=y,this.ext=i.fluidDynamics.ext=D,l&&function(t){let i=t.fluidDynamics.gl;t.fluidDynamics.advectionVertexShader=T(i.VERTEX_SHADER,"\n\t\t\tprecision highp float;\n\n\t\t\tattribute vec2 aPosition;\n\t\t\tvarying vec2 vUv;\n\t\t\tvarying vec2 vL;\n\t\t\tvarying vec2 vR;\n\t\t\tvarying vec2 vT;\n\t\t\tvarying vec2 vB;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\tvoid main () {\n\t\t\t\tvUv = aPosition * 0.5 + 0.5;\n\t\t\t\tvL = vUv - vec2(texelSize.x, 0.0);\n\t\t\t\tvR = vUv + vec2(texelSize.x, 0.0);\n\t\t\t\tvT = vUv + vec2(0.0, texelSize.y);\n\t\t\t\tvB = vUv - vec2(0.0, texelSize.y);\n\t\t\t\tgl_Position = vec4(aPosition, 0.0, 1.0);\n\t\t\t}\n\t\t",i),t.fluidDynamics.divergenceVertexShader=T(i.VERTEX_SHADER,"\n\t\t\tprecision highp float;\n\n\t\t\tattribute vec2 aPosition;\n\t\t\tvarying vec2 vUv;\n\t\t\tvarying vec2 vL;\n\t\t\tvarying vec2 vR;\n\t\t\tvarying vec2 vT;\n\t\t\tvarying vec2 vB;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\tvoid main () {\n\t\t\t\tvUv = aPosition * 0.5 + 0.5;\n\t\t\t\tvL = vUv - vec2(texelSize.x, 0.0);\n\t\t\t\tvR = vUv + vec2(texelSize.x, 0.0);\n\t\t\t\tvT = vUv + vec2(0.0, texelSize.y);\n\t\t\t\tvB = vUv - vec2(0.0, texelSize.y);\n\t\t\t\tgl_Position = vec4(aPosition, 0.0, 1.0);\n\t\t\t}\n\t\t",i),t.fluidDynamics.curlVertexShader=T(i.VERTEX_SHADER,"\n\t\t\tprecision highp float;\n\n\t\t\tattribute vec2 aPosition;\n\t\t\tvarying vec2 vUv;\n\t\t\tvarying vec2 vL;\n\t\t\tvarying vec2 vR;\n\t\t\tvarying vec2 vT;\n\t\t\tvarying vec2 vB;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\tvoid main () {\n\t\t\t\tvUv = aPosition * 0.5 + 0.5;\n\t\t\t\tvL = vUv - vec2(texelSize.x, 0.0);\n\t\t\t\tvR = vUv + vec2(texelSize.x, 0.0);\n\t\t\t\tvT = vUv + vec2(0.0, texelSize.y);\n\t\t\t\tvB = vUv - vec2(0.0, texelSize.y);\n\t\t\t\tgl_Position = vec4(aPosition, 0.0, 1.0);\n\t\t\t}\n\t\t",i),t.fluidDynamics.vorticityVertexShader=T(i.VERTEX_SHADER,"\n\t\t\tprecision highp float;\n\n\t\t\tattribute vec2 aPosition;\n\t\t\tvarying vec2 vUv;\n\t\t\tvarying vec2 vL;\n\t\t\tvarying vec2 vR;\n\t\t\tvarying vec2 vT;\n\t\t\tvarying vec2 vB;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\tvoid main () {\n\t\t\t\tvUv = aPosition * 0.5 + 0.5;\n\t\t\t\tvL = vUv - vec2(texelSize.x, 0.0);\n\t\t\t\tvR = vUv + vec2(texelSize.x, 0.0);\n\t\t\t\tvT = vUv + vec2(0.0, texelSize.y);\n\t\t\t\tvB = vUv - vec2(0.0, texelSize.y);\n\t\t\t\tgl_Position = vec4(aPosition, 0.0, 1.0);\n\t\t\t}\n\t\t",i),t.fluidDynamics.pressureVertexShader=T(i.VERTEX_SHADER,"\n\t\t\tprecision highp float;\n\n\t\t\tattribute vec2 aPosition;\n\t\t\tvarying vec2 vUv;\n\t\t\tvarying vec2 vL;\n\t\t\tvarying vec2 vR;\n\t\t\tvarying vec2 vT;\n\t\t\tvarying vec2 vB;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\tvoid main () {\n\t\t\t\tvUv = aPosition * 0.5 + 0.5;\n\t\t\t\tvL = vUv - vec2(texelSize.x, 0.0);\n\t\t\t\tvR = vUv + vec2(texelSize.x, 0.0);\n\t\t\t\tvT = vUv + vec2(0.0, texelSize.y);\n\t\t\t\tvB = vUv - vec2(0.0, texelSize.y);\n\t\t\t\tgl_Position = vec4(aPosition, 0.0, 1.0);\n\t\t\t}\n\t\t",i),t.fluidDynamics.gradienSubtractVertexShader=T(i.VERTEX_SHADER,"\n\t\t\tprecision highp float;\n\n\t\t\tattribute vec2 aPosition;\n\t\t\tvarying vec2 vUv;\n\t\t\tvarying vec2 vL;\n\t\t\tvarying vec2 vR;\n\t\t\tvarying vec2 vT;\n\t\t\tvarying vec2 vB;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\tvoid main () {\n\t\t\t\tvUv = aPosition * 0.5 + 0.5;\n\t\t\t\tvL = vUv - vec2(texelSize.x, 0.0);\n\t\t\t\tvR = vUv + vec2(texelSize.x, 0.0);\n\t\t\t\tvT = vUv + vec2(0.0, texelSize.y);\n\t\t\t\tvB = vUv - vec2(0.0, texelSize.y);\n\t\t\t\tgl_Position = vec4(aPosition, 0.0, 1.0);\n\t\t\t}\n\t\t",i)}(i),function(t){let i=t.fluidDynamics.gl,e=t.fluidDynamics.ext;t.fluidDynamics.baseVertexShader=T(i.VERTEX_SHADER,"\n\t\t\tprecision highp float;\n\n\t\t\tattribute vec2 aPosition;\n\t\t\tvarying vec2 vUv;\n\t\t\tvarying vec2 vL;\n\t\t\tvarying vec2 vR;\n\t\t\tvarying vec2 vT;\n\t\t\tvarying vec2 vB;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\tvoid main () {\n\t\t\t\tvUv = aPosition * 0.5 + 0.5;\n\t\t\t\tvL = vUv - vec2(texelSize.x, 0.0);\n\t\t\t\tvR = vUv + vec2(texelSize.x, 0.0);\n\t\t\t\tvT = vUv + vec2(0.0, texelSize.y);\n\t\t\t\tvB = vUv - vec2(0.0, texelSize.y);\n\t\t\t\tgl_Position = vec4(aPosition, 0.0, 1.0);\n\t\t\t}\n\t\t",i),t.fluidDynamics.copyShader=T(i.FRAGMENT_SHADER,"\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump sampler2D;\n\n\t\t\tvarying highp vec2 vUv;\n\t\t\tuniform sampler2D uTexture;\n\n\t\t\tvoid main () {\n\t\t\t\tgl_FragColor = texture2D(uTexture, vUv);\n\t\t\t}\n\t\t",i),t.fluidDynamics.clearShader=T(i.FRAGMENT_SHADER,"\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump sampler2D;\n\n\t\t\tvarying highp vec2 vUv;\n\t\t\tuniform sampler2D uTexture;\n\t\t\tuniform float value;\n\n\t\t\tvoid main () {\n\t\t\t\tgl_FragColor = value * texture2D(uTexture, vUv);\n\t\t\t}\n\t\t",i),t.fluidDynamics.finalShader=T(i.FRAGMENT_SHADER,"\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump sampler2D;\n\n\t\t\tvarying highp vec2 vUv;\n\t\t\tuniform sampler2D uTexture;\n\n\t\t\tvoid main () {\n\t\t\t\tvec4 c = texture2D(uTexture, vUv);\n\n\t\t\t\tfloat a = max(c.r, max(c.g, c.b));\n\t\t\t\tgl_FragColor = vec4(c.xyz, a);\n\t\t\t}\n\t\t",i);var n,s="precision highp float;\n\t\t\tprecision highp sampler2D;\n\n\t\t\tvarying vec2 vUv;\n\t\t\tvarying vec2 vL;\n\t\t\tvarying vec2 vR;\n\t\t\tvarying vec2 vT;\n\t\t\tvarying vec2 vB;\n\t\t\tuniform sampler2D uTexture;\n\t\t\tuniform sampler2D uDithering;\n\t\t\tuniform vec2 ditherScale;\n\n\t\t\tuniform vec4 color1;\n\t\t\tuniform vec4 color2;\n\t\t\tuniform vec4 color3;\n\t\t\tuniform float utime;\n\t\t\tuniform float uColorChangeLenth;\n\t\t\t\n\t\t\tvoid main () {\n\t\t\t\tvec4 c = texture2D(uTexture, vUv);\n\t\t\t\tvec4 black = vec4(0.0, 0.0, 0.0, c.a);\n\n\t\t\t\t//see how light color1 is: (range 0.0 - 1.0)\n\t\t\t\tfloat light = max(color1.r, max(color1.g, color1.b));\n\n\t\t\t\tvec4 interpolatedColor = vec4(1.0);\n\t\t\t\t//INTERPOLATEDCOLOR HERE\n\n\t\t\t\t//COLORFULL HERE\n\t\t\t\t\n\t\t\t\tgl_FragColor = c;\n\t\t\t}";if(!t.fluidDynamics.settings.colorFull)if("timed"==t.fluidDynamics.settings.colorChangeType)switch(t.fluidDynamics.settings.allColorCount){case 0:s=s.replace("//INTERPOLATEDCOLOR HERE","\n\t\t\t\t\t\t\tinterpolatedColor = color1;\n\t\t\t\t\t\t\tc -= 1.0 - interpolatedColor;\n\t\t\n\t\t\t\t\t\t\tif(light == 0.0){\n\t\t\t\t\t\t\t\tc = black;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t");break;case 1:s=s.replace("//INTERPOLATEDCOLOR HERE","\n\t\t\t\t\t\t\tfloat t = sin(utime * 1.0 / uColorChangeLenth);\n\t\t\t\t\t\t\tt = (t+1.0) * 0.5;\n\t\t\t\t\t\t\tinterpolatedColor = mix(color1, color2, smoothstep(0.0, 1.0, t));\n\t\t\n\t\t\t\t\t\t\tc -= 1.0 - interpolatedColor;\n\t\t\t\t\t\t");break;case 2:s=s.replace("//INTERPOLATEDCOLOR HERE","\n\t\t\t\t\t\t\t//float t = sin(utime * uColorChangeLenth * 2.0/3.0);\n\t\t\t\t\t\t\t//t = (t + 1.0) * 0.5;\n\t\t\t\t\t\t\tfloat t = utime * 1.0 / uColorChangeLenth;\n\t\t\t\t\t\t\tt = t * 2.0/3.0 - 1.0 * floor((t * 2.0/3.0) / 1.0);\n\t\t\n\t\t\t\t\t\t\tfloat step1 = 1.0 / 3.0;\n\t\t\t\t\t\t\tfloat step2 = 2.0 / 3.0;\n\t\t\n\t\t\t\t\t\t\tif (t < step1) {\n\t\t\t\t\t\t\t\tinterpolatedColor = mix(color1, color2, smoothstep(0.0, step1, t));\n\t\t\t\t\t\t\t} else if (t < step2) {\n\t\t\t\t\t\t\t\tinterpolatedColor = mix(color2, color3, smoothstep(step1, step2, t));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tinterpolatedColor = mix(color3, color1, smoothstep(step2, 1.0, t));\n\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\tc -= 1.0 - interpolatedColor;\n\t\t\t\t\t\t")}else s=s.replace("//INTERPOLATEDCOLOR HERE","\n\t\t\t\t\t//float t = sin(utime * 1.0 / uColorChangeLenth);\n\t\t\t\t\t//t = (t+1.0) * 0.5;\n\t\t\t\t\tinterpolatedColor = mix(color2, color1, smoothstep(0.3, 1.0, c.a));\n\t\n\t\t\t\t\tc -= 1.0 - interpolatedColor;\n\t\t\t\t");t.fluidDynamics.displayShaderSource=s,n="\n\t\t\t\tprecision highp float;\n\t\t\t\tprecision highp sampler2D;\n\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D uTarget;\n\t\t\t\tuniform float aspectRatio;\n\t\t\t\tuniform vec4 color;\n\t\t\t\tuniform vec4 dxdy;\n\t\t\t\tuniform vec2 point;\n\t\t\t\tuniform float radius;\n\t\t\t\tuniform float utime;\n\t\t\t\tuniform float pass;\n\t\t\t\tuniform float add;\n\t\t\t\tuniform float mousePower;\n\n\t\t\t\tvoid main () {\n\t\t\t\t\tvec2 p = vUv - point.xy;\n\t\t\t\t\tp.x *= aspectRatio;\n\t\t\t\t\tvec4 switchVal = color;\n\n\t\t\t\t\tif(pass == 1.0){\n\t\t\t\t\t\tswitchVal = dxdy;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(add == 1.0){\n\t\t\t\t\t\tswitchVal = switchVal * mousePower;\n\t\t\t\t\t}\n\n\t\t\t\t\t//GLOW HERE\n\n\t\t\t\t\tif(pass == 0.0){\n\t\t\t\t\t\tsplat.a = 1.0;\n\t\t\t\t\t}\n\n\t\t\t\t\tvec4 base = texture2D(uTarget, vUv);\n\n\t\t\t\t\tgl_FragColor = splat + base;\n\t\t\t\t}\n\t\t\t",n=t.fluidDynamics.settings.glow?n.replace("//GLOW HERE","\n\t\t\t\t\tvec4 splat = 1.0 / (1.0 + dot(p, p) / (radius * radius * 1000.0)) * switchVal;\n\t\t\t\t"):n.replace("//GLOW HERE","\n\t\t\t\t\tvec4 splat = exp(-dot(p, p) / radius) * switchVal;\n\t\t\t\t");t.fluidDynamics.splatShader=T(i.FRAGMENT_SHADER,n,i);var a="precision highp float;\n\t\tprecision highp sampler2D;\n\n\t\tvarying vec2 vUv;\n\t\tuniform sampler2D uTarget;\n\t\tuniform float aspectRatio;\n\t\tuniform float utime;\n\t\tuniform vec2 point;\n\t\tuniform float radius;\n\t\tuniform float uColorChangeLenth;\n\t\tuniform float uMistTime;\n\t\tuniform float add;\n\n\t\t//PRE MAIN\n\t\t\n\t\tvoid main () {\n\t\t\tvec2 uv = vUv - point.xy;\n\t\t\tuv.x *= aspectRatio;\n\t\t\t\n\t\t\tvec2 p = vUv - point.xy;\n\t\t\tp.x *= aspectRatio;\n\n\t\t\t//NOISE HERE\n\n\t\t\t//INTERPOLATEDCOLOR HERE\n\t\t\tvec4 interpolatedColor = vec4(1.0);\n\n\t\t\t//OUTPUT HERE\n\t\t}";a="mist"==t.fluidDynamics.settings.automateSel?(a=(a=a.replace("//PRE MAIN","\n\t\t\t\tfloat hash(float n) {\n\t\t\t\t\treturn fract(sin(n) * 43758.5453);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfloat smoothsteper(float edge0, float edge1, float x) {\n\t\t\t\t\tfloat t = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n\t\t\t\t\treturn t * t * (3.0 - 2.0 * t);\n\t\t\t\t}\n\n\t\t\t\tfloat perlinNoise(vec2 p) {\n\t\t\t\t\tvec2 i = floor(p);\n\t\t\t\t\tvec2 f = fract(p);\n\n\t\t\t\t\t// Calculate the four corners of the cell\n\t\t\t\t\tfloat a = hash(dot(i, vec2(37.0, 17.0)));\n\t\t\t\t\tfloat b = hash(dot(i + vec2(1.0, 0.0), vec2(37.0, 17.0)));\n\t\t\t\t\tfloat c = hash(dot(i + vec2(0.0, 1.0), vec2(37.0, 17.0)));\n\t\t\t\t\tfloat d = hash(dot(i + vec2(1.0, 1.0), vec2(37.0, 17.0)));\n\n\t\t\t\t\t// Smoothly interpolate gradients\n\t\t\t\t\tvec2 u = f * f * (3.0 - 2.0 * f);\n\t\t\t\t\treturn mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\n\t\t\t\t}\n\t\t\t")).replace("//NOISE HERE","\n\t\t\t\tfloat timeFactor = utime * 0.1;\n\t\t\t\tfloat timeV = perlinNoise(vec2(timeFactor * 0.1));\n\t\t\t\tfloat timeF = perlinNoise(vec2(timeFactor * 3.5));\n\n\t\t\t\tfloat noiseValue = (perlinNoise((uv - vec2(timeV, timeF)) * 10.0 + timeFactor) + 1.0) * 0.5;\n\n\t\t\t\tvec4 noise = vec4(noiseValue);\n\t\t\t\tnoise.x -= 0.5;\n\t\t\t\tnoise.y -= 0.5;\n\t\t\t\tnoise.z -= 0.5;\n\t\t\t\tnoise.a = 0.0;\n\t\t\t\tnoise *= 0.001;\n\t\t\t")).replace("//OUTPUT HERE","\n\t\t\t\tvec4 limitedOutput = vec4(0.0);\n\t\t\t\tvec4 splat = vec4(0.0);\n\t\t\t\tvec4 base = vec4(0.0);\n\n\t\t\t\tif(add == 1.0){\n\t\t\t\t\tp.x = 0.0;\n\t\t\t\t\tsplat = exp(-dot(p, p) / radius * noiseValue) * interpolatedColor;\n\t\t\t\t\tbase = texture2D(uTarget, vUv);\n\t\t\t\t\tlimitedOutput = min(splat + base + noise, interpolatedColor);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tsplat = exp(-dot(p, p) / radius) * interpolatedColor;\n\t\t\t\t\tbase = texture2D(uTarget, vUv);\n\t\t\t\t\tlimitedOutput = min(splat + base, interpolatedColor);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tgl_FragColor = limitedOutput;\n\t\t\t\t//gl_FragColor = vec4(noise, 1.0);\n\t\t\t"):t.fluidDynamics.settings.glow?a.replace("//OUTPUT HERE","\n\t\t\t\t\tvec4 splat = 1.0 / (1.0 + dot(p, p) / (radius * radius * 1000.0)) * interpolatedColor;\n\t\t\t\t\tvec4 base = texture2D(uTarget, vUv);\n\t\t\t\t\tvec4 limitedOutput = min(splat + base, interpolatedColor * 1.25);\n\t\t\t\t\tgl_FragColor = limitedOutput;\n\t\t\t\t"):a.replace("//OUTPUT HERE","\n\t\t\t\t\tvec4 splat = exp(-dot(p, p) / radius) * interpolatedColor;\n\t\t\t\t\tvec4 base = texture2D(uTarget, vUv);\n\t\t\t\t\tvec4 limitedOutput = min(splat + base, interpolatedColor * 1.25);\n\t\t\t\t\tgl_FragColor = limitedOutput;\n\t\t\t\t");t.fluidDynamics.splatShader2=T(i.FRAGMENT_SHADER,a,i),t.fluidDynamics.advectionShader=T(i.FRAGMENT_SHADER,"\n\t\t\tprecision highp float;\n\t\t\tprecision highp sampler2D;\n\n\t\t\tvarying vec2 vUv;\n\t\t\tuniform sampler2D uVelocity;\n\t\t\tuniform sampler2D uSource;\n\t\t\tuniform vec2 dyeTexelSize;\n\t\t\tuniform vec2 texelSize;\n\t\t\tuniform float dt;\n\t\t\tuniform float dissipation;\n\n\t\t\tvec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n\t\t\t\tvec2 st = uv / tsize - 0.5;\n\n\t\t\t\tvec2 iuv = floor(st);\n\t\t\t\tvec2 fuv = fract(st);\n\n\t\t\t\tvec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n\t\t\t\tvec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n\t\t\t\tvec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n\t\t\t\tvec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n\n\t\t\t\treturn mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n\t\t\t}\n\n\t\t\tvoid main () {\n\t\t\t#ifdef MANUAL_FILTERING\n\t\t\t\tvec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n\t\t\t\tvec4 result = bilerp(uSource, coord, dyeTexelSize);\n\t\t\t#else\n\t\t\t\tvec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n\t\t\t\tvec4 result = texture2D(uSource, coord);\n\t\t\t#endif\n\t\t\t\tfloat decay = 1.0 + dissipation * dt;\n\t\t\t\tgl_FragColor = result / decay;\n\t\t\t}",i,e.supportLinearFiltering?null:["MANUAL_FILTERING"]),t.fluidDynamics.divergenceShader=T(i.FRAGMENT_SHADER,"\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump sampler2D;\n\n\t\t\tvarying highp vec2 vUv;\n\t\t\tvarying highp vec2 vL;\n\t\t\tvarying highp vec2 vR;\n\t\t\tvarying highp vec2 vT;\n\t\t\tvarying highp vec2 vB;\n\t\t\tuniform sampler2D uVelocity;\n\n\t\t\tvoid main () {\n\t\t\t\tfloat L = texture2D(uVelocity, vL).x;\n\t\t\t\tfloat R = texture2D(uVelocity, vR).x;\n\t\t\t\tfloat T = texture2D(uVelocity, vT).y;\n\t\t\t\tfloat B = texture2D(uVelocity, vB).y;\n\n\t\t\t\tvec2 C = texture2D(uVelocity, vUv).xy;\n\t\t\t\tif (vL.x < 0.0) { L = -C.x; }\n\t\t\t\tif (vR.x > 1.0) { R = -C.x; }\n\t\t\t\tif (vT.y > 1.0) { T = -C.y; }\n\t\t\t\tif (vB.y < 0.0) { B = -C.y; }\n\n\t\t\t\tfloat div = 0.5 * (R - L + T - B);\n\t\t\t\tgl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n\t\t\t}\n\t\t",i),t.fluidDynamics.curlShader=T(i.FRAGMENT_SHADER,"\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump sampler2D;\n\n\t\t\tvarying highp vec2 vUv;\n\t\t\tvarying highp vec2 vL;\n\t\t\tvarying highp vec2 vR;\n\t\t\tvarying highp vec2 vT;\n\t\t\tvarying highp vec2 vB;\n\t\t\tuniform sampler2D uVelocity;\n\n\t\t\tvoid main () {\n\t\t\t\tfloat L = texture2D(uVelocity, vL).y;\n\t\t\t\tfloat R = texture2D(uVelocity, vR).y;\n\t\t\t\tfloat T = texture2D(uVelocity, vT).x;\n\t\t\t\tfloat B = texture2D(uVelocity, vB).x;\n\t\t\t\tfloat vorticity = R - L - T + B;\n\t\t\t\tgl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n\t\t\t}\n\t\t",i),t.fluidDynamics.vorticityShader=T(i.FRAGMENT_SHADER,"\n\t\t\tprecision highp float;\n\t\t\tprecision highp sampler2D;\n\n\t\t\tvarying vec2 vUv;\n\t\t\tvarying vec2 vL;\n\t\t\tvarying vec2 vR;\n\t\t\tvarying vec2 vT;\n\t\t\tvarying vec2 vB;\n\t\t\tuniform sampler2D uVelocity;\n\t\t\tuniform sampler2D uCurl;\n\t\t\tuniform float curl;\n\t\t\tuniform float dt;\n\n\t\t\tvoid main () {\n\t\t\t\tfloat L = texture2D(uCurl, vL).x;\n\t\t\t\tfloat R = texture2D(uCurl, vR).x;\n\t\t\t\tfloat T = texture2D(uCurl, vT).x;\n\t\t\t\tfloat B = texture2D(uCurl, vB).x;\n\t\t\t\tfloat C = texture2D(uCurl, vUv).x;\n\n\t\t\t\tvec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n\t\t\t\tforce /= length(force) + 0.0001;\n\t\t\t\tforce *= curl * C;\n\t\t\t\tforce.y *= -1.0;\n\n\t\t\t\tvec2 velocity = texture2D(uVelocity, vUv).xy;\n\t\t\t\tvelocity += force * dt;\n\t\t\t\tvelocity = min(max(velocity, -1000.0), 1000.0);\n\t\t\t\tgl_FragColor = vec4(velocity, 0.0, 1.0);\n\t\t\t}\n\t\t",i),t.fluidDynamics.pressureShader=T(i.FRAGMENT_SHADER,"\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump sampler2D;\n\n\t\t\tvarying highp vec2 vUv;\n\t\t\tvarying highp vec2 vL;\n\t\t\tvarying highp vec2 vR;\n\t\t\tvarying highp vec2 vT;\n\t\t\tvarying highp vec2 vB;\n\t\t\tuniform sampler2D uPressure;\n\t\t\tuniform sampler2D uDivergence;\n\n\t\t\tvoid main () {\n\t\t\t\tfloat L = texture2D(uPressure, vL).x;\n\t\t\t\tfloat R = texture2D(uPressure, vR).x;\n\t\t\t\tfloat T = texture2D(uPressure, vT).x;\n\t\t\t\tfloat B = texture2D(uPressure, vB).x;\n\t\t\t\tfloat C = texture2D(uPressure, vUv).x;\n\t\t\t\tfloat divergence = texture2D(uDivergence, vUv).x;\n\t\t\t\tfloat pressure = (L + R + B + T - divergence) * 0.25;\n\t\t\t\tgl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n\t\t\t}\n\t\t",i),t.fluidDynamics.gradientSubtractShader=T(i.FRAGMENT_SHADER,"\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump sampler2D;\n\n\t\t\tvarying highp vec2 vUv;\n\t\t\tvarying highp vec2 vL;\n\t\t\tvarying highp vec2 vR;\n\t\t\tvarying highp vec2 vT;\n\t\t\tvarying highp vec2 vB;\n\t\t\tuniform sampler2D uPressure;\n\t\t\tuniform sampler2D uVelocity;\n\n\t\t\tvoid main () {\n\t\t\t\tfloat L = texture2D(uPressure, vL).x;\n\t\t\t\tfloat R = texture2D(uPressure, vR).x;\n\t\t\t\tfloat T = texture2D(uPressure, vT).x;\n\t\t\t\tfloat B = texture2D(uPressure, vB).x;\n\t\t\t\tvec2 velocity = texture2D(uVelocity, vUv).xy;\n\t\t\t\tvelocity.xy -= vec2(R - L, T - B);\n\t\t\t\tgl_FragColor = vec4(velocity, 0.0, 1.0);\n\t\t\t}\n\t\t",i)}(i),i.fluidDynamics.updateColorFunction,i.fluidDynamics.settings.colorFull?i.fluidDynamics.updateColorFunction=function(t,i){i.fluidDynamics.colorUpdateTimer+=t*i.fluidDynamics.settings.colorChangeLenth,i.fluidDynamics.colorUpdateTimer>=1&&(i.fluidDynamics.colorUpdateTimer=function(t,i,e){let n=e-i;return 0==n?i:(t-i)%n+i}(i.fluidDynamics.colorUpdateTimer,0,1),i.fluidDynamics.pointers.forEach((t=>{t.color=function(t){let i=6*t,e=Math.floor(i),n=i-e,s=1,a=1-n,o=n;switch(e%6){case 0:return[1,o,0,1];case 1:return[a,1,0,1];case 2:return[0,1,o,1];case 3:return[0,a,1,1];case 4:return[o,0,1,1];case 5:return[1,0,s,1]}}(Math.random()),t.color[3]=i.fluidDynamics.settings.maxOpacityValue})))}:i.fluidDynamics.updateColorFunction=function(t,i){};const U=new o(i.fluidDynamics.baseVertexShader,i.fluidDynamics.copyShader,y),C=new o(i.fluidDynamics.baseVertexShader,i.fluidDynamics.clearShader,y),F=new o(i.fluidDynamics.baseVertexShader,i.fluidDynamics.splatShader,y),b=new o(i.fluidDynamics.baseVertexShader,i.fluidDynamics.splatShader2,y),P=new o(l?i.fluidDynamics.advectionVertexShader:i.fluidDynamics.baseVertexShader,i.fluidDynamics.advectionShader,y),V=new o(l?i.fluidDynamics.divergenceVertexShader:i.fluidDynamics.baseVertexShader,i.fluidDynamics.divergenceShader,y),A=new o(l?i.fluidDynamics.curlVertexShader:i.fluidDynamics.baseVertexShader,i.fluidDynamics.curlShader,y),O=new o(l?i.fluidDynamics.vorticityVertexShader:i.fluidDynamics.baseVertexShader,i.fluidDynamics.vorticityShader,y),X=new o(l?i.fluidDynamics.pressureVertexShader:i.fluidDynamics.baseVertexShader,i.fluidDynamics.pressureShader,y),M=new o(l?i.fluidDynamics.gradienSubtractVertexShader:i.fluidDynamics.baseVertexShader,i.fluidDynamics.gradientSubtractShader,y),Y=new o(i.fluidDynamics.baseVertexShader,i.fluidDynamics.finalShader,y),N=new a(i.fluidDynamics.baseVertexShader,i.fluidDynamics.displayShaderSource,i.fluidDynamics.gl),B=(y.bindBuffer(y.ARRAY_BUFFER,y.createBuffer()),y.bufferData(y.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),y.STATIC_DRAW),y.bindBuffer(y.ELEMENT_ARRAY_BUFFER,y.createBuffer()),y.bufferData(y.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),y.STATIC_DRAW),y.vertexAttribPointer(0,2,y.FLOAT,!1,0,0),y.enableVertexAttribArray(0),(t,i=!1)=>{null==t?(y.viewport(0,0,y.drawingBufferWidth,y.drawingBufferHeight),y.bindFramebuffer(y.FRAMEBUFFER,null)):(y.viewport(0,0,t.width,t.height),y.bindFramebuffer(y.FRAMEBUFFER,t.fbo)),i&&(y.clearColor(0,0,0,1),y.clear(y.COLOR_BUFFER_BIT)),y.drawElements(y.TRIANGLES,6,y.UNSIGNED_SHORT,0)});function z(t,i,e,n,s,a,o){return t.width==i&&t.height==e||(t.read=function(t,i,e,n,s,a,o){let r=x(i,e,n,s,a,o,y);return U.bind(),y.uniform1i(U.uniforms.uTexture,t.attach(0)),y.disable(y.BLEND),B(r),r}(t.read,i,e,n,s,a,o),t.write=x(i,e,n,s,a,o,y),t.width=i,t.height=e,t.texelSizeX=1/i,t.texelSizeY=1/e),t}switch(this.initFramebuffers=()=>{let e,n=!1;n=!window._R_is_Editor&&t.is_mobile(),e=n?i.fluidDynamics.qualityFluidMobile:i.fluidDynamics.qualityFluid;let s=g(128,y),a=g(e/100*1024,y);const o=D.halfFloatTexType,r=D.formatRGBA,l=D.formatRG,c=D.formatR,u=D.supportLinearFiltering?y.LINEAR:y.NEAREST;y.disable(y.BLEND),S=null==S?h(a.width,a.height,r.internalFormat,r.format,o,u,y):z(S,a.width,a.height,r.internalFormat,r.format,o,u),E=null==E?h(s.width,s.height,l.internalFormat,l.format,o,u,y):z(E,s.width,s.height,l.internalFormat,l.format,o,u),_=x(s.width,s.height,c.internalFormat,c.format,o,y.NEAREST,y),w=x(s.width,s.height,c.internalFormat,c.format,o,y.NEAREST,y),L=h(s.width,s.height,c.internalFormat,c.format,o,y.NEAREST,y)},i.fluidDynamics.splat,i.fluidDynamics.settings.colorFull?i.fluidDynamics.splat=(t,e,n,s,a,o)=>{F.bind(),y.uniform1i(F.uniforms.uTarget,E.read.attach(0)),y.uniform1f(F.uniforms.aspectRatio,f.width/f.height),y.uniform1f(F.uniforms.pass,1),y.uniform2f(F.uniforms.point,t,e),y.uniform4f(F.uniforms.dxdy,n,s,0,0),"off"==i.fluidDynamics.settings.automateSel&&(i.fluidDynamics.settings.splatRadius=Math.min(Math.max(Math.abs(n),Math.abs(s))/4e4*i.fluidDynamics.splatRadius,i.fluidDynamics.splatRadius)),y.uniform1f(F.uniforms.radius,p(i.fluidDynamics.settings.splatRadius/100,f)),B(E.write),E.swap(),y.uniform1i(F.uniforms.uTarget,S.read.attach(0)),y.uniform1f(F.uniforms.pass,0),y.uniform4f(F.uniforms.color,a[0]*a[3],a[1]*a[3],a[2]*a[3],a[3]),B(S.write),S.swap()}:i.fluidDynamics.splat=(t,e,n,s,a,o)=>{F.bind(),y.uniform1i(F.uniforms.uTarget,E.read.attach(0)),y.uniform1f(F.uniforms.aspectRatio,f.width/f.height),y.uniform2f(F.uniforms.point,t,e),y.uniform4f(F.uniforms.color,n,s,0,0),"mist"==i.fluidDynamics.settings.automateSel&&(y.uniform1f(F.uniforms.add,o?0:1),y.uniform1f(F.uniforms.mousePower,30*i.fluidDynamics.settings.mousePower)),"off"==i.fluidDynamics.settings.automateSel&&(i.fluidDynamics.settings.splatRadius=Math.min(Math.max(Math.abs(n),Math.abs(s))/4e4*i.fluidDynamics.splatRadius,i.fluidDynamics.splatRadius)),y.uniform1f(F.uniforms.radius,p(i.fluidDynamics.settings.splatRadius/100,f)),B(E.write),E.swap(),b.bind(),y.uniform1i(b.uniforms.uTarget,S.read.attach(0)),y.uniform1f(b.uniforms.aspectRatio,f.width/f.height),y.uniform2f(b.uniforms.point,t,e),y.uniform1f(b.uniforms.add,o?1:0),y.uniform1f(b.uniforms.uColorcount,i.fluidDynamics.settings.allColorCount),y.uniform1f(b.uniforms.uColorChangeLenth,i.fluidDynamics.settings.colorChangeLenth),y.uniform1f(b.uniforms.utime,i.fluidDynamics.utime),y.uniform1f(b.uniforms.uMistTime,i.fluidDynamics.utime/1e3),y.uniform1f(b.uniforms.radius,p(i.fluidDynamics.settings.splatRadius/100,f)),B(S.write),S.swap()},this.applyInputs=()=>{i.fluidDynamics.pointers.forEach((t=>{t.moved&&(t.moved=!1,this.splatPointer(t))}))},this.step=t=>{y.disable(y.BLEND),A.bind(),y.uniform2f(A.uniforms.texelSize,E.texelSizeX,E.texelSizeY),y.uniform1i(A.uniforms.uVelocity,E.read.attach(0)),B(w),O.bind(),y.uniform2f(O.uniforms.texelSize,E.texelSizeX,E.texelSizeY),y.uniform1i(O.uniforms.uVelocity,E.read.attach(0)),y.uniform1i(O.uniforms.uCurl,w.attach(1)),y.uniform1f(O.uniforms.curl,i.fluidDynamics.settings.curlVal),y.uniform1f(O.uniforms.dt,t),B(E.write),E.swap(),V.bind(),y.uniform2f(V.uniforms.texelSize,E.texelSizeX,E.texelSizeY),y.uniform1i(V.uniforms.uVelocity,E.read.attach(0)),B(_),C.bind(),y.uniform1i(C.uniforms.uTexture,L.read.attach(0)),y.uniform1f(C.uniforms.value,i.fluidDynamics.settings.pressureDissipation),B(L.write),L.swap(),X.bind(),y.uniform2f(X.uniforms.texelSize,E.texelSizeX,E.texelSizeY),y.uniform1i(X.uniforms.uDivergence,_.attach(0));for(let t=0;t<i.fluidDynamics.settings.PRESSURE_ITERATIONS;t++)y.uniform1i(X.uniforms.uPressure,L.read.attach(1)),B(L.write),L.swap();M.bind(),y.uniform2f(M.uniforms.texelSize,E.texelSizeX,E.texelSizeY),y.uniform1i(M.uniforms.uPressure,L.read.attach(0)),y.uniform1i(M.uniforms.uVelocity,E.read.attach(1)),B(E.write),E.swap(),P.bind(),y.uniform2f(P.uniforms.texelSize,E.texelSizeX,E.texelSizeY),D.supportLinearFiltering||y.uniform2f(P.uniforms.dyeTexelSize,E.texelSizeX,E.texelSizeY);let e=E.read.attach(0);y.uniform1i(P.uniforms.uVelocity,e),y.uniform1i(P.uniforms.uSource,e),y.uniform1f(P.uniforms.dt,t),y.uniform1f(P.uniforms.dissipation,i.fluidDynamics.settings.velocityDissipation),B(E.write),E.swap(),D.supportLinearFiltering||y.uniform2f(P.uniforms.dyeTexelSize,S.texelSizeX,S.texelSizeY),y.uniform1i(P.uniforms.uVelocity,E.read.attach(0)),y.uniform1i(P.uniforms.uSource,S.read.attach(1)),y.uniform1f(P.uniforms.dissipation,i.fluidDynamics.settings.densityDissipation),B(S.write),S.swap()},this.render=t=>{!function(t){let e=null==t?y.drawingBufferWidth:t.width,n=null==t?y.drawingBufferHeight:t.height;Y.bind(),l&&y.uniform2f(Y.uniforms.texelSize,1/e,1/n);y.uniform1i(Y.uniforms.uTexture,S.read.attach(0)),B(S.write),S.swap(),N.bind(),l&&y.uniform2f(N.uniforms.displayTexelSize,1/e,1/n);y.uniform1i(N.uniforms.uTexture,S.read.attach(0)),y.uniform4fv(N.uniforms.color1,i.fluidDynamics.settings.fd_color1),y.uniform4fv(N.uniforms.color2,i.fluidDynamics.settings.fd_color2),y.uniform4fv(N.uniforms.color3,i.fluidDynamics.settings.fd_color3),y.uniform1f(N.uniforms.utime,i.fluidDynamics.utime),y.uniform1f(N.uniforms.uColorChangeLenth,i.fluidDynamics.settings.colorChangeLenth),B(t)}(t)},this.splatPointer=t=>{let e=6e3*t.deltaX,n=6e3*t.deltaY;y.disable(y.BLEND),i.fluidDynamics.splat(t.texcoordX,t.texcoordY,e,n,t.color,t.add)},N.setKeywords([]),v(i.fluidDynamics.canvas,i.fluidDynamics.dprFluid,i.eow,i.eoh,i.dprOnMobile,i.dprFluidMobile),this.initFramebuffers(),i.fluidDynamics.settings.automateSel){case"shoot":c(i);break;case"swipe":u(i);break;case"collision":d(i)}i.fluidDynamics.lastUpdateTime=Date.now(),i.fluidDynamics.colorUpdateTimer=0,"circle"==i.fluidDynamics.settings.automateSel?"off"!=i.fluidDynamics.settings.followAMGen&&m(i):"off"!=i.fluidDynamics.settings.followMouse&&m(i),this.bindedRender=this.update.bind(this)}s.prototype.destroy=function(){this.destroyed=!0,this.gl.clearColor(0,0,0,0),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.frame=cancelAnimationFrame(this.frame)},s.prototype.update=function(){if(this.destroyed||this.paused)return;this.frame=cancelAnimationFrame(this.frame),this.frame=requestAnimationFrame(this.bindedRender);var t=r(this);t.fluidDynamics.utime>=1e3*Math.PI&&(t.fluidDynamics.utime=0,t.fluidDynamics.startTime=Date.now()),t.fluidDynamics.utime=(Date.now()-t.fluidDynamics.startTime)/1e3,"mist"!=t.fluidDynamics.settings.automateSel?t.fluidDynamics.dt=function(t){let i=Date.now(),e=(i-t.fluidDynamics.lastUpdateTime)/1e3;return e=Math.min(e,.016666),t.fluidDynamics.lastUpdateTime=i,e}(t):t.fluidDynamics.dt=.003*t.fluidDynamics.settings.vecLength/100,v(t.fluidDynamics.canvas,t.fluidDynamics.dprFluid,t.eow,t.eoh,t.dprOnMobile,t.dprFluidMobile)&&this.initFramebuffers(),t.fluidDynamics.updateColorFunction(t.fluidDynamics.dt,t);let i=t.fluidDynamics.settings.automateSel,e=n[i];t.fluidDynamics.COUNTER_2<t.fluidDynamics.settings.simuDelay?t.fluidDynamics.COUNTER_2++:e&&e(t,t.fluidDynamics.settings.simuWait,t.fluidDynamics.settings.simuLength,t.fluidDynamics.settings.simuRadius),this.applyInputs(),this.step(t.fluidDynamics.dt),this.render(null)};class a{constructor(t,i,e){this.vertexShader=t,this.fragmentShaderSource=i,this.programs=[],this.activeProgram=null,this.uniforms=[],this.gl=e}setKeywords(t){let i=0;for(let e=0;e<t.length;e++)i+=D(t[e]);let e=this.programs[i];if(null==e){let n=T(this.gl.FRAGMENT_SHADER,this.fragmentShaderSource,this.gl,t);e=y(this.vertexShader,n,this.gl),this.programs[i]=e}e!=this.activeProgram&&(this.uniforms=l(e,this.gl),this.activeProgram=e)}bind(){this.gl.useProgram(this.activeProgram)}}class o{constructor(t,i,e){this.gl=e,this.uniforms={},this.program=y(t,i,e),this.uniforms=l(this.program,e)}bind(){this.gl.useProgram(this.program)}}function r(i){return _R_is_Editor?RVS.LIB.RSFLUIDDYNAMICS[i.lid]:t[i.sid]._L[i.lid]}function l(t,i){let e=[],n=i.getProgramParameter(t,i.ACTIVE_UNIFORMS);for(let s=0;s<n;s++){let n=i.getActiveUniform(t,s).name;e[n]=i.getUniformLocation(t,n)}return e}function c(t){const i=Math.random()-.5,e=Math.random()-.5,n=i/Math.sqrt(i*i+e*e),s=e/Math.sqrt(i*i+e*e);t.fluidDynamics.settings.vec2.x=2*n,t.fluidDynamics.settings.vec2.y=2*s,t.fluidDynamics.pointers[0].moved=!1,t.fluidDynamics.pointers[0].prevTexcoordX=t.fluidDynamics.pointers[0].texcoordX,t.fluidDynamics.pointers[0].prevTexcoordY=t.fluidDynamics.pointers[0].texcoordY,t.fluidDynamics.pointers[0].texcoordX=.5,t.fluidDynamics.pointers[0].texcoordY=.5,t.fluidDynamics.pointers[0].deltaX=0,t.fluidDynamics.pointers[0].deltaY=0}function u(t){var i=.1;switch(t.fluidDynamics.settings.directionChooser){case"lr":t.fluidDynamics.settings.vec2.set(1,0),t.fluidDynamics.settings.startPos2.set(i,.5);break;case"rl":t.fluidDynamics.settings.vec2.set(-1,0),t.fluidDynamics.settings.startPos2.set(.9,.5);break;case"bt":t.fluidDynamics.settings.vec2.set(0,1),t.fluidDynamics.settings.startPos2.set(.5,i);break;case"tb":t.fluidDynamics.settings.vec2.set(0,-1),t.fluidDynamics.settings.startPos2.set(.5,.9);break;case"bltr":t.fluidDynamics.settings.vec2.set(t.fluidDynamics.canvas.width,t.fluidDynamics.canvas.height),t.fluidDynamics.settings.startPos2.set(i,i);break;case"trbl":t.fluidDynamics.settings.vec2.set(-t.fluidDynamics.canvas.width,-t.fluidDynamics.canvas.height),t.fluidDynamics.settings.startPos2.set(.9,.9);break;case"brtl":t.fluidDynamics.settings.vec2.set(-t.fluidDynamics.canvas.width,t.fluidDynamics.canvas.height),t.fluidDynamics.settings.startPos2.set(.9,i);break;case"tlbr":t.fluidDynamics.settings.vec2.set(t.fluidDynamics.canvas.width,-t.fluidDynamics.canvas.height),t.fluidDynamics.settings.startPos2.set(i,.9)}t.fluidDynamics.settings.vec2.setLength(1),t.fluidDynamics.pointers[0].moved=!1,t.fluidDynamics.pointers[0].prevTexcoordX=t.fluidDynamics.pointers[0].texcoordX,t.fluidDynamics.pointers[0].prevTexcoordY=t.fluidDynamics.pointers[0].texcoordY,t.fluidDynamics.pointers[0].texcoordX=t.fluidDynamics.settings.startPos2.x,t.fluidDynamics.pointers[0].texcoordY=t.fluidDynamics.settings.startPos2.y,t.fluidDynamics.pointers[0].deltaX=0,t.fluidDynamics.pointers[0].deltaY=0}function d(t){var i=.1;switch(t.fluidDynamics.settings.colDirectionChooser){case"lr":t.fluidDynamics.settings.vec2.set(1,0),t.fluidDynamics.settings.startPos2.set(i,.5),t.fluidDynamics.settings.startPosNegate.set(.9,.5);break;case"tb":t.fluidDynamics.settings.vec2.set(0,1),t.fluidDynamics.settings.startPos2.set(.5,i),t.fluidDynamics.settings.startPosNegate.set(.5,.9);break;case"trbl":t.fluidDynamics.settings.vec2.set(t.fluidDynamics.canvas.width,t.fluidDynamics.canvas.height),t.fluidDynamics.settings.startPos2.set(i,i),t.fluidDynamics.settings.startPosNegate.set(.9,.9);break;case"tlbr":t.fluidDynamics.settings.vec2.set(-t.fluidDynamics.canvas.width,t.fluidDynamics.canvas.height),t.fluidDynamics.settings.startPos2.set(.9,i),t.fluidDynamics.settings.startPosNegate.set(i,.9)}t.fluidDynamics.settings.vec2.setLength(1),t.fluidDynamics.pointers[0].moved=!1,t.fluidDynamics.pointers[0].prevTexcoordX=t.fluidDynamics.pointers[0].texcoordX,t.fluidDynamics.pointers[0].prevTexcoordY=t.fluidDynamics.pointers[0].texcoordY,t.fluidDynamics.pointers[0].texcoordX=t.fluidDynamics.settings.startPos2.x,t.fluidDynamics.pointers[0].texcoordY=t.fluidDynamics.settings.startPos2.y,t.fluidDynamics.pointers[0].deltaX=0,t.fluidDynamics.pointers[0].deltaY=0,t.fluidDynamics.settings.vec2.setLength(1),t.fluidDynamics.pointers[1].moved=!1,t.fluidDynamics.pointers[1].prevTexcoordX=t.fluidDynamics.pointers[1].texcoordX,t.fluidDynamics.pointers[1].prevTexcoordY=t.fluidDynamics.pointers[1].texcoordY,t.fluidDynamics.pointers[1].texcoordX=t.fluidDynamics.settings.startPosNegate.x,t.fluidDynamics.pointers[1].texcoordY=t.fluidDynamics.settings.startPosNegate.y,t.fluidDynamics.pointers[1].deltaX=0,t.fluidDynamics.pointers[1].deltaY=0}function f(t,i){var e=60*Math.random()-30+i;t.set(Math.cos(e*Math.PI/180),Math.sin(e*Math.PI/180))}function m(i){window.lastfluidMouseMoveUpdateTime=0;let e=!1;e=!window._R_is_Editor&&t.is_mobile();let n=0;"mGeneratorSimu"!=i.fluidDynamics.settings.followMouse&&"mGeneratorSimu"!=i.fluidDynamics.settings.followAMGen||(n=i.fluidDynamics.pointers.length-1);let s=i.fluidDynamics.canvas.getBoundingClientRect();i.fluidDynamics.canvas.addEventListener("mouseenter",(t=>{i.fluidDynamics.pointers[n].moved=!0,i.fluidDynamics.pointers[n].prevTexcoordX=i.fluidDynamics.pointers[n].texcoordX,i.fluidDynamics.pointers[n].prevTexcoordY=i.fluidDynamics.pointers[n].texcoordY,i.fluidDynamics.pointers[n].texcoordX=t.offsetX/s.width,i.fluidDynamics.pointers[n].texcoordY=1-t.offsetY/s.height,i.fluidDynamics.pointers[n].deltaX=0,i.fluidDynamics.pointers[n].deltaY=0})),i.fluidDynamics.canvas.addEventListener("mousemove",(function(t){let e=(new Date).getTime();e-lastfluidMouseMoveUpdateTime>30&&(i.fluidDynamics.pointers[n].moved=!0,i.fluidDynamics.pointers[n].prevTexcoordX=i.fluidDynamics.pointers[n].texcoordX,i.fluidDynamics.pointers[n].prevTexcoordY=i.fluidDynamics.pointers[n].texcoordY,i.fluidDynamics.pointers[n].texcoordX=t.offsetX/s.width,i.fluidDynamics.pointers[n].texcoordY=1-t.offsetY/s.height,i.fluidDynamics.pointers[n].deltaX=(i.fluidDynamics.pointers[n].texcoordX-i.fluidDynamics.pointers[n].prevTexcoordX)*i.fluidDynamics.settings.mousePower,i.fluidDynamics.pointers[n].deltaY=(i.fluidDynamics.pointers[n].texcoordY-i.fluidDynamics.pointers[n].prevTexcoordY)*i.fluidDynamics.settings.mousePower,lastfluidMouseMoveUpdateTime=e)})),e&&i.fluidDynamics.canvas.addEventListener("touchmove",(function(t){let e=(new Date).getTime();if(e-lastfluidMouseMoveUpdateTime>30){let a=t.touches[0];s=i.fluidDynamics.canvas.getBoundingClientRect(),i.fluidDynamics.pointers[n].moved=!0,i.fluidDynamics.pointers[n].prevTexcoordX=i.fluidDynamics.pointers[n].texcoordX,i.fluidDynamics.pointers[n].prevTexcoordY=i.fluidDynamics.pointers[n].texcoordY,i.fluidDynamics.pointers[n].texcoordX=a.clientX/s.width,i.fluidDynamics.pointers[n].texcoordY=1-a.clientY/s.height,i.fluidDynamics.pointers[n].deltaX=(i.fluidDynamics.pointers[n].texcoordX-i.fluidDynamics.pointers[n].prevTexcoordX)*i.fluidDynamics.settings.mousePower,i.fluidDynamics.pointers[n].deltaY=(i.fluidDynamics.pointers[n].texcoordY-i.fluidDynamics.pointers[n].prevTexcoordY)*i.fluidDynamics.settings.mousePower,lastfluidMouseMoveUpdateTime=e}}))}function y(t,i,e){let n=e.createProgram();return e.attachShader(n,t),e.attachShader(n,i),e.linkProgram(n),e.getProgramParameter(n,e.LINK_STATUS)||console.trace(e.getProgramInfoLog(n)),n}function v(i,e,n,s,a,o){let r=!1;r=!window._R_is_Editor&&t.is_mobile();let l="auto"==e||"0"==e?window.devicePixelRatio:Math.min(window.devicePixelRatio,parseInt(e));if(r&&a&&"auto"!==o&&(l=Math.min(l,parseInt(o))),i.width!==n*l||i.height!==s*l){return i.width=n*l,i.height=s*l,i.style.width=n+"px",i.style.height=s+"px",i.getContext("webgl2",{alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1}).viewport(0,0,i.width,i.height),!0}return!1}function D(t){if(0==t.length)return 0;let i=0;for(let e=0;e<t.length;e++)i=(i<<5)-i+t.charCodeAt(e),i|=0;return i}function p(t,i){let e=i.width/i.height;return e>1&&(t*=e),t}function g(t,i){let e=i.drawingBufferWidth/i.drawingBufferHeight;e<1&&(e=1/e);let n=Math.round(t),s=Math.round(t*e);return i.drawingBufferWidth>i.drawingBufferHeight?{width:s,height:n}:{width:n,height:s}}function h(t,i,e,n,s,a,o){let r=x(t,i,e,n,s,a,o),l=x(t,i,e,n,s,a,o);return{width:t,height:i,texelSizeX:r.texelSizeX,texelSizeY:r.texelSizeY,get read(){return r},set read(t){r=t},get write(){return l},set write(t){l=t},swap(){let t=r;r=l,l=t}}}function x(t,i,e,n,s,a,o){o.activeTexture(o.TEXTURE0);let r=o.createTexture();o.bindTexture(o.TEXTURE_2D,r),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MIN_FILTER,a),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MAG_FILTER,a),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_WRAP_S,o.CLAMP_TO_EDGE),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_WRAP_T,o.CLAMP_TO_EDGE),o.texImage2D(o.TEXTURE_2D,0,e,t,i,0,n,s,null);let l=o.createFramebuffer();return o.bindFramebuffer(o.FRAMEBUFFER,l),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,r,0),o.viewport(0,0,t,i),o.clear(o.COLOR_BUFFER_BIT),{texture:r,fbo:l,width:t,height:i,texelSizeX:1/t,texelSizeY:1/i,attach:t=>(o.activeTexture(o.TEXTURE0+t),o.bindTexture(o.TEXTURE_2D,r),t)}}function R(t,i,e,n){if(!function(t,i,e,n){let s=t.createTexture();t.bindTexture(t.TEXTURE_2D,s),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texImage2D(t.TEXTURE_2D,0,i,4,4,0,e,n,null);let a=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,a),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,s,0);let o=t.checkFramebufferStatus(t.FRAMEBUFFER);return o==t.FRAMEBUFFER_COMPLETE}(t,i,e,n))switch(i){case t.R16F:return R(t,t.RG16F,t.RG,n);case t.RG16F:return R(t,t.RGBA16F,t.RGBA,n);default:return null}return{internalFormat:i,format:e}}function T(t,i,e,n){i=function(t,i){if(null==i)return t;let e="";return i.forEach((t=>{e+="#define "+t+"\n"})),e+t}(i,n);const s=e.createShader(t);return e.shaderSource(s,i),e.compileShader(s),e.getShaderParameter(s,e.COMPILE_STATUS)||console.trace(e.getShaderInfoLog(s)),s}function S(t,i){t[0]*=i,t[1]*=i,t[2]*=i,t[3]>i&&(t[3]=i)}window.RS_MODULES=window.RS_MODULES||{},window.RS_MODULES.fluiddynamics={loaded:!0,version:"1.0.0"},window.RS_MODULES.checkMinimal&&window.RS_MODULES.checkMinimal()}();