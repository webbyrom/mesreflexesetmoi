/**
 * @preserve
 * @author    ThemePunch <info@themepunch.com>
 * @link      http://www.themepunch.com/
 * @copyright 2018 ThemePunch
 * @version   6.7.0
 */
!function(){"use strict";if(window.SR7??={},window._tpt??={},SR7.A??={},SR7.F??={},SR7.D??={},void 0!==(SR7.A.shapeburst?.init??void 0))return;SR7.A.shapeburst={...SR7.A.shapeburst,init:e=>{let t=SR7.A.shapeburst;void 0===SR7.A.shapeburstcss&&(_tpt.injectCssJs(t.style,void 0,void 0,"shapeburst_global_styles"),SR7.A.shapeburstcss=!0),SR7.M[e].c.moduleListeners??={},SR7.M[e].c.moduleListeners.shapeburst??={},t.defCursor=SR7.M[e].c.module.style.cursor,_tpt.scrollObserver.observe(SR7.M[e].c.module),SR7.F.module.listeners.init(e),t.listeners.init(e);const s=["THREE","WEBGL"];return null==t.burst&&s.push("pw_Burst"),null==t.updateShader&&s.push("sb_Shaders"),s},getModuleBasics:(e={},t)=>({u:"compare"==t?void 0:e.u??e.enable??!0}),getLayerBasics:(e={},t)=>{let s={parbackground:e.pbg??e.parbackground??"default",luminaBoost:e.ml??e.luminaBoost??0,darkLimit:e.md??e.darkLimit??0,colorTrue:e.mc??e.colorTrue??!1,imgSource:e.mi??e.imgSource??"image",textInput:e.mt??e.textInput??"Roboto",textFont:e.mf??e.textFont??"Roboto",textFontWeight:e.mw??e.textFontWeight??"300",textColor:e.mo??e.textColor??"#ffffff",textFontSize:e.ms??e.textFontSize??200,imgSize:e.mz??e.imgSize??"contain",bspos:e.mp??e.bspos??"center center",particlesCount:e.pc??e.particlesCount??15e3,particleSize:e.ps??e.particleSize??15,randomness:e.pr??e.randomness??20,parSpeed:e.pp??e.parSpeed??1,explosionRadius:e.ir??e.explosionRadius??35,maxBurstDur:e.id??e.maxBurstDur??10,explosionPower:e.ip??e.explosionPower??30,interSpeed:e.ie??e.interSpeed??3,sizeChOnInter:e.ic??e.sizeChOnInter??!0,transitionON:e.tr??e.transitionON??!0,transitionAnimTime:e.ta??e.transitionAnimTime??30,fxOn:e.fx??e.fxOn??!1,blurScale:e.fb??e.blurScale??50,fxOnlyOnInter:e.fo??e.fxOnlyOnInter??!1,dpr:e.dpr??e.dpr??1};return"migrate"==t&&SR7.D.collectModulFont({family:s.textFont,weight:[s.textFontWeight,s.textFontWeight,s.textFontWeight,s.textFontWeight,s.textFontWeight]},t),s},prepareLayer:async(e,s,a)=>{if("shapeburst"===s.subtype){var{c:n}=SR7.F.getLayer(a);return new Promise((e=>{n.addOns??={},n.addOns.shapeburst??={},n.addOns.shapeburst.canvas=SR7.WEBGL.getCanvas(),s.addOns.shapeburst=SR7.A.shapeburst.getLayerBasics(s.addOns.shapeburst,"normalize"),t(s.addOns.shapeburst,n).then((t=>{n.addOns.shapeburst.settings=t,n.addOns.shapeburst.prepared=!0,n.el.appendChild(n.addOns.shapeburst.canvas.canvas),e()})).catch((t=>{console.log(t),e()}))}))}},toggle:(e,t)=>{let s=SR7.A.shapeburst;const a=SR7.M[e];if(s.onFire)for(let t in s.onFire[e])_tpt.hop(s.onFire[e],t)&&(a.states.inViewPort?s.play(e,a.c.layers[t]):s.pause(e,a.c.layers[t],!1))},play:(e,t)=>{let s=SR7.A.shapeburst;s.onFire??={},s.onFire[e]??={},s.onFire[e][t.el.id]=!0,t.addOns.shapeburst.paused&&s.sburst.render(t),s.sburst.resize(t,t.cw,t.ch),s.fitCameraToObject(t),s.sburst.render(t)},pause:(e,t,s)=>{let a=SR7.A.shapeburst;t.addOns.shapeburst.paused=!0,t.addOns.shapeburst.frame=cancelAnimationFrame(t.addOns.shapeburst.frame),s&&a?.onFire?.[e]?.[t.el.id]&&delete a.onFire[e][t.el.id]},listeners:{init:e=>{let t=SR7.A.shapeburst;t.listenersAdded?.[e]||(t.onFire??={},t.onFire[e]??={},t.listenersAdded||document.addEventListener("sr.layer.action",(function(e){""+(e.layersettings?.addOns?.shapeburst??!1)!="false"&&("enterstage"==e.eventtype?(e.c.addOns?.shapeburst?.built||(SR7.A.shapeburst.sburst.build(e.c),e.c.addOns.shapeburst.built=!0),t.play(e.id,e.c)):"leavestage"==e.eventtype&&t.pause(e.id,e.c,!0))})),t.mouseEnter=t.mouseEnter??SR7.F.module.listeners.reg(e,"mouseenter",((e,s)=>t.listeners.mouse.module.enter(e,s))),t.mouseMove=t.mouseMove??SR7.F.module.listeners.reg(e,"mousemove",((e,s)=>t.listeners.mouse.module.move(e,s))),t.mouseLeave=t.mouseLeave??SR7.F.module.listeners.reg(e,"mouseleave",((e,s)=>t.listeners.mouse.module.leave(e,s))),t.listenersAdded??={},t.listenersAdded[e]=!0)},mouse:{module:{enter:(e,t)=>{SR7.A.shapeburst.listeners.mouse.module.default(e,t,"enter")},move:(e,t)=>{SR7.A.shapeburst.listeners.mouse.module.default(e,t,"move")},leave:(e,t)=>{SR7.A.shapeburst.listeners.mouse.module.default(e,t,"leave")},default:(e,t,s)=>{const a=SR7.M[e];a.c.addOns??={},a.c.addOns.shapeburst??={},a.c.addOns.shapeburst.mouse??={};const n=a.c.addOns.shapeburst;for(var e in n.mouse.type=s,SR7.M){const a=SR7.M[e];if(a.states.inViewPort)for(var r in a.c.layers){if(!a.c.layers[r].addOns?.shapeburst)continue;a.c.layers[r].addOns.shapeburst;let e=t.clientX/a.dims.module.w*a.c.layers[r].cw,n=t.clientY/a.dims.module.h*a.c.layers[r].ch;SR7.A.shapeburst.listeners.mouse[s]({layerX:e,layerY:n,clientX:e,clientY:n},a.c.layers[r],!0)}}}},enter:(e,t,s)=>{let a=t.addOns.shapeburst;var n=a.canvas.canvas.getBoundingClientRect();a.mouseX=(s?e.clientX:e.clientX-n.top)/n.width,a.mouseY=(s?e.clientY:e.clientY-n.left)/n.height,_tpt.gsap.to(a,{duration:2,lerp:a.settings.lerp})},leave:(e,t)=>{let s=t.addOns.shapeburst;s.mouseX=.5,s.mouseY=.5,_tpt.gsap.to(s,{duration:0,lerp:.001,overwrite:!0})},move:(e,t,s)=>{let a=t.addOns.shapeburst,n=(new Date).getTime();if(null==a.settings.lastMouseMoveUpdateTime&&(a.settings.lastMouseMoveUpdateTime=0),n-a.settings.lastMouseMoveUpdateTime>10){a.settings.mouseMoveCounter>5&&(a.settings.mouseMoveCounter=0,a.mouseX_old=a.mouseX,a.mouseY_old=a.mouseY),a.settings.mouseMoveCounter++,a.mouseX=e.offsetX,a.mouseY=e.offsetY;let t=Math.max(Math.abs(a.mouseX_old-a.mouseX),Math.abs(a.mouseY_old-a.mouseY))/30;t>1&&(t=1),t<.2&&(t=0);let s=new THREE.Vector2(a.mouseX-a.canvas.canvas.width/2,-a.mouseY+a.canvas.canvas.height/2),r=a.instancedGeometry.attributes.instancePosition.array,o=a.instancedGeometry.attributes.explosionValues.array,i=a.material.uniforms.uExplosionTime.value,u=a.settings.maxBurstDur;for(let e=0;e<r.length;e++){new THREE.Vector2(r[3*e],r[3*e+1]).distanceTo(s)<a.material.uniforms.uExplosionRadius.value*t&&(o[3*e]=s.x,o[3*e+1]=s.y,i-o[3*e+2]>=3.1415926*u&&(o[3*e+2]=i))}a.instancedGeometry.attributes.explosionValues.needsUpdate=!0,a.settings.lastMouseMoveUpdateTime=n}}}},fitCameraToObject:e=>{let t=e.addOns?.shapeburst??!1;if(t){let s=SR7.A.shapeburst,a=Math.round(e.cw??0),n=Math.round(e.ch??0);t.lastDim={width:a,height:n},s.sburst.resize(e,a,n),t.paused=!1,cancelAnimationFrame(t.frame),t.frame=requestAnimationFrame(t.bindedRender)}}};let e=e=>parseFloat(e),t=async(t,s)=>(t.parbackground="default"===t.parbackground?SR7.E.resources.sbURL+"public/assets/img.png":t.parbackground,t.luminaBoost=e(t.luminaBoost)/100,t.darkLimit=e(t.darkLimit)/200,t.colorTrue=t.colorTrue,t.imgSource=t.imgSource,t.textInput=t.textInput,t.textFont=t.textFont,t.textFontWeight=t.textFontWeight,t.textColor=t.textColor,t.textFontSize=e(t.textFontSize),t.imgSize??t.imgSize,t.bspos??t.bspos,t.particlesCount=e(t.particlesCount),t.particleSize=e(t.particleSize)/10,t.randomness=e(t.randomness)/3,t.parSpeed=e(t.parSpeed),t.explosionRadius=e(t.explosionRadius),t.maxBurstDur=e(t.maxBurstDur)/10,t.explosionPower=e(t.explosionPower),t.interSpeed=e(t.interSpeed)/2-.25,t.sizeChOnInter=t.sizeChOnInter,t.transitionON=t.transitionON,t.transitionAnimTime=e(t.transitionAnimTime),t.fxOn=t.fxOn,t.blurScale=e(t.blurScale),t.fxOnlyOnInter=t.fxOnlyOnInter,t.lastMouseMoveUpdateTime=0,t.mouseMoveCounter=0,t.transitionAnimCounter=0,t.dpr=e(t.dpr),void 0===t.clock&&(t.clock=new THREE.Clock),t.sr7Image??={},t.sr7Image.canvas=document.createElement("canvas"),t.sr7Image.ctx=t.sr7Image.canvas.getContext("2d"),"image"==t.imgSource?await _tpt.loadSingleImage(t.parbackground).then((e=>{t.sr7Image.img=e.image,t.sr7Image.ctx.drawImage(t.sr7Image.img,0,0,t.sr7Image.img.naturalwidth,t.sr7Image.img.naturalheight),t.sr7Image.texture=new THREE.Texture(t.sr7Image.canvas)})):"text"==t.imgSource?await _tpt.checkFontLoaded(t.textFont,t.textFontWeight,null,400).then((()=>{t.sr7Image.ctx.fillStyle=t.textColor,t.sr7Image.ctx.font=`${t.textFontWeight} ${t.textFontSize}px ${t.textFont}`,t.sr7Image.ctx.textBaseline="middle";const e=t.sr7Image.ctx.measureText(t.textInput),a=Math.ceil(e.width),n=t.textFontSize;let r=s.ch/n,o=s.cw/a;t.sr7Image.canvas.width=s.cw,t.sr7Image.canvas.height=s.ch,t.sr7Image.ctx.imageSmoothingEnabled=!1;const i=(t.sr7Image.canvas.width-a*Math.min(r,o))/2,u=t.sr7Image.canvas.height/2;t.sr7Image.ctx.clearRect(0,0,t.sr7Image.canvas.width,t.sr7Image.canvas.height),t.sr7Image.ctx.font=`${t.textFontWeight} ${t.textFontSize*Math.min(r,o)}px ${t.textFont}`,t.sr7Image.ctx.textBaseline="middle",t.sr7Image.ctx.fillStyle=t.textColor,t.sr7Image.ctx.fillText(t.textInput,i,u),t.sr7Image.texture=new THREE.Texture(t.sr7Image.canvas)})):console.log("invalid source"),t);_tpt.R??={},_tpt.R.shapeburst=_tpt.extend?_tpt.extend(_tpt.R.shapeburst,{status:2,version:"1.0"}):{status:2,version:"1.0"},window.dispatchEvent(new CustomEvent("SR7ShapeBurstReady"))}();
!function(){"use strict";if(window.SR7??={},window._tpt??={},SR7.A??={},SR7.F??={},SR7.D??={},void 0!==(SR7.A.shapeburst?.sburst??void 0))return;SR7.A.shapeburst={...SR7.A.shapeburst,sburst:{build:t=>{let a=SR7.A.shapeburst,r=t.addOns.shapeburst,s=r.settings;e(t),r.renderer=new THREE.WebGLRenderer({antialias:!0,canvas:r.canvas.canvas,alpha:!0}),r.canvas.canvas.addEventListener("mousemove",(function(e){a.listeners.mouse.move(e,t)})),r.renderer.setPixelRatio(Math.min(s.dpr,window.devicePixelRatio)),r.renderer.setSize(r.canvas.canvas.width,r.canvas.canvas.height),r.bindedRender=e=>{a.sburst.render(t,e)}},render:(e,t)=>{let a=SR7.A.shapeburst,{id:r}=SR7.F.getLayer(e.el.id),s=e.addOns.shapeburst,n=s.settings;if(s.destroyed||s.paused||(s.frame=cancelAnimationFrame(s.frame),s.frame=requestAnimationFrame(s.bindedRender)),void 0!==t&&void 0!==s.time){s.tDiff=(t-s.time)/1600,s.time=t,void 0!==s.lastDim&&s.lastDim.width===e.cw&&s.lastDim.height===e.ch||a.fitCameraToObject(e);if(n.clock.getElapsedTime()>n.clockCounter*(1/60)){if(n.clockCounter+=s.tDiff,n.transitionON&&n.transitionAnimCounter<n.transitionAnimTime){let t=n.transitionAnimCounter/n.transitionAnimTime,a=Math.cos((t+1)*Math.PI/2)+1,r="image"===n.imgSource?n.randomness/500*Math.min(e.cw,e.ch):n.randomness/500*e.cw;s.material.uniforms.uRandomness.value=100*a+r,n.transitionAnimCounter++}s.material.uniforms.uTime.value+=.001*n.parSpeed,s.material.uniforms.uNoiseTime.value+=.01*n.parSpeed,s.material.uniforms.uExplosionTime.value+=.05*n.interSpeed}s.renderer.render(s.scene,s.camera)}else s.time=t},update:e=>{e.addOns.shapeburst.settings},resize:(t,a,r)=>{let s=t.addOns.shapeburst;s.w=a,s.h=r,s.camera&&(s.camera.left=-a/2,s.camera.right=a/2,s.camera.top=r/2,s.camera.bottom=-r/2,s.camera.updateProjectionMatrix(),e(t),s.canvasRect=s.canvas.canvas.getBoundingClientRect(),s.camera.position.set(0,0,1),s.camera.lookAt(new THREE.Vector3(0,0,0)),s.renderer.setSize(a,r))},destroy:e=>{let t=e.addOns.shapeburst;t.destroyed=!0,t.renderer&&(t.renderer.dispose(),t.renderer.domElement.remove(),t.renderer.domElement=null),t.renderer=null,t.frame=cancelAnimationFrame(t.frame)}}};let e=e=>{let r=e.addOns.shapeburst,s=r.settings;s.load_texture=s.sr7Image.img?new THREE.Texture(s.sr7Image.img):s.sr7Image.texture,s.load_texture.needsUpdate=!0,"image"==s.imgSource&&a(e),"text"==s.imgSource&&t(e),r.camera=new THREE.OrthographicCamera(e.cw/-2,e.cw/2,e.ch/2,e.ch/-2,1,1e3),r.scene=new THREE.Scene,r.group=new THREE.Group,r.clock=new THREE.Clock(!0);let n=new THREE.CircleBufferGeometry(1.5,32);r.instancedGeometry=(new THREE.InstancedBufferGeometry).copy(n);let i=s.sr7Image.ctx.getImageData(0,0,s.sr7Image.canvas.width,s.sr7Image.canvas.height).data,m=s.sr7Image.canvas.width,o=s.sr7Image.canvas.height;const c=e.cw/s.sr7Image.canvas.width,d=e.ch/s.sr7Image.canvas.height,l=Math.min(c,d);m=s.sr7Image.canvas.width*l,o=s.sr7Image.canvas.height*l;let u=Math.round(Math.sqrt(s.particlesCount*(m/o))),h=Math.round(s.particlesCount/u),g=m/(u-1),p=o/(h-1),w=[],v=[],x=[],I=0,f=0,E=0;for(let e=0;e<h;e++)for(let t=0;t<u;t++){let a=t*g/m,r=e*p/o,n=Math.floor(a*(s.sr7Image.canvas.width-1)),c=4*(Math.floor(r*(s.sr7Image.canvas.height-1))*s.sr7Image.canvas.width+n)+3,d=(.2126*i[c-3]+.7152*i[c-2]+.0722*i[c-1])/255;i[c]>0&&null!=i[c]&&d>s.darkLimit?(w[I++]=t*g-m/2,w[I++]=-e*p+o/2,w[I++]=Math.random()*Math.PI*2-Math.PI,x[E++]=i[c-3]/255,x[E++]=i[c-2]/255,x[E++]=i[c-1]/255,x[E++]=i[c]/255,v[f++]=0,v[f++]=0,v[f++]=-1):(I+=3,f+=3,E+=4)}let b=new Float32Array(w),R=new Float32Array(v),S=new Float32Array(x);r.instancedGeometry.setAttribute("instancePosition",new THREE.InstancedBufferAttribute(b,3).setUsage(THREE.DynamicDrawUsage)),r.instancedGeometry.setAttribute("explosionValues",new THREE.InstancedBufferAttribute(R,3).setUsage(THREE.DynamicDrawUsage)),r.instancedGeometry.setAttribute("colorValues",new THREE.InstancedBufferAttribute(S,4).setUsage(THREE.DynamicDrawUsage)),r.material=new THREE.ShaderMaterial({vertexShader:SR7.A.shapeburst.t_vertexshader,fragmentShader:SR7.A.shapeburst.t_fragmentshader,uniforms:{uParticleSize:{value:"image"===s.imgSource?s.particleSize/500*Math.min(e.cw,e.ch):s.particleSize/500*e.cw},uTime:{value:0},uNoiseTime:{value:0},uExplosionTime:{value:0},uExplosionRadius:{value:s.explosionRadius},uRandomness:{value:"image"===s.imgSource?s.randomness/500*Math.min(e.cw,e.ch):s.randomness/500*e.cw},uLuminaBoost:{value:s.luminaBoost},uDarkLimit:{value:s.darkLimit},uMaxBurstDur:{value:s.maxBurstDur},uExplosionPower:{value:s.explosionPower},uColorTrue:{value:"image"!==s.imgSource||s.colorTrue},uFxOn:{value:s.fxOn},uSizeChOnInter:{value:s.sizeChOnInter},uBlurScale:{value:s.blurScale},uFxOnlyOnInter:{value:s.fxOnlyOnInter}},transparent:!0,blending:THREE.NormalBlending,depthWrite:!1,premultipliedAlpha:!1});let T=new THREE.InstancedMesh(r.instancedGeometry,r.material,b.length/3);r.scene.add(T),s.clockCounter??=0},t=e=>{let t=e.addOns.shapeburst.settings;t.sr7Image.ctx.fillStyle=t.textColor,t.sr7Image.ctx.font=`${t.textFontWeight} ${t.textFontSize}px ${t.textFont}`,t.sr7Image.ctx.textBaseline="middle";const a=t.sr7Image.ctx.measureText(t.textInput),r=Math.ceil(a.width),s=t.textFontSize;let n=e.ch/s,i=e.cw/r;t.sr7Image.canvas.width=1.2*e.cw,t.sr7Image.canvas.height=1.2*e.ch,t.sr7Image.ctx.imageSmoothingEnabled=!1;const m=(t.sr7Image.canvas.width-r*Math.min(n,i))/2,o=t.sr7Image.canvas.height/2;t.sr7Image.ctx.clearRect(0,0,t.sr7Image.canvas.width,t.sr7Image.canvas.height),t.sr7Image.ctx.font=`${t.textFontWeight} ${t.textFontSize*Math.min(n,i)}px ${t.textFont}`,t.sr7Image.ctx.textBaseline="middle",t.sr7Image.ctx.fillStyle=t.textColor,t.sr7Image.ctx.fillText(t.textInput,m,o),t.sr7Image.texture=new THREE.Texture(t.sr7Image.canvas),t.sr7Image.texture.needsUpdate=!0},a=e=>{let t=e.addOns.shapeburst.settings;t.sr7Image.canvas.width=e.cw,t.sr7Image.canvas.height=e.ch,t.sr7Image.ctx.imageSmoothingEnabled=!1;let a=t.sr7Image.img.naturalWidth,r=t.sr7Image.img.naturalHeight,s=a/r,n=a,i=r;if("contain"===t.imgSize){let m,o;s<e.cw/e.ch?(i=e.ch,n=a*(e.ch/r),m=-(n-e.cw)/2,o=0,-1!==t.bspos.indexOf("right")?m=e.cw-n:-1!==t.bspos.indexOf("left")&&(m=0)):(n=e.cw,i=r*(e.cw/a),m=0,o=-(i-e.ch)/2,-1!==t.bspos.indexOf("bottom")?o=e.ch-i:-1!==t.bspos.indexOf("top")&&(o=0)),t.sr7Image.ctx.drawImage(t.sr7Image.img,m,o,n,i)}else{let m,o;s>e.cw/e.ch?(i=e.ch,n=a*(e.ch/r),m=-(n-e.cw)/2,o=0,-1!==t.bspos.indexOf("right")?m=e.cw-n:-1!==t.bspos.indexOf("left")&&(m=0)):(n=e.cw,i=r*(e.cw/a),m=0,o=-(i-e.ch)/2,-1!==t.bspos.indexOf("bottom")?o=e.ch-i:-1!==t.bspos.indexOf("top")&&(o=0)),t.sr7Image.ctx.drawImage(t.sr7Image.img,m,o,n,i)}t.sr7Image.ctx.scale(1,1),t.sr7Image.url=t.parbackground};_tpt.R??={},_tpt.R.sb_SBurst=_tpt.extend?_tpt.extend(_tpt.R.sb_SBurst,{status:2,version:"1.0"}):{status:2,version:"1.0"},window.dispatchEvent(new CustomEvent("SR7ShapeBurstWavesLoaded"))}();
!function(){"use strict";window.SR7??={},window._tpt??={},SR7.A??={},SR7.F??={},SR7.D??={},void 0===(SR7.A.shapeburst?.updateShader??void 0)&&(SR7.A.shapeburst={...SR7.A.shapeburst,updateShader:(t,n,o)=>{window.beforeCompile},t_vertexshader:"\n            attribute vec3 instancePosition;\n            attribute vec3 explosionValues;\n            attribute vec4 colorValues;\n\n            uniform float uParticleSize;\n            uniform float uTime;\n            uniform float uNoiseTime;\n            uniform float uExplosionTime;\n            uniform float uExplosionRadius;\n\t\t\tuniform float uRandomness;\n\t\t\tuniform float uMaxBurstDur;\n\t\t\tuniform float uExplosionPower;\n\t\t\tuniform bool uFxOn;\n\t\t\tuniform bool uSizeChOnInter;\n\t\t\tuniform float uBlurScale;\n\t\t\tuniform bool uFxOnlyOnInter;\n\n            varying vec4 vColor;\n            varying float vLum;\n\t\t\tvarying vec2 vUv;\n\t\t\tvarying float vEnlarged;\n\n            vec2 hash( vec2 p ) // replace this by something better\n            {\n                p = vec2( dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)) );\n                return -1.0 + 2.0*fract(sin(p)*43758.5453123);\n            }\n\n            float noise( in vec2 p )\n            {\n                const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n                const float K2 = 0.211324865; // (3-sqrt(3))/6;\n\n                vec2  i = floor( p + (p.x+p.y)*K1 );\n                vec2  a = p - i + (i.x+i.y)*K2;\n                float m = step(a.y,a.x);\n                vec2  o = vec2(m,1.0-m);\n                vec2  b = a - o + K2;\n                vec2  c = a - 1.0 + 2.0*K2;\n                vec3  h = max( 0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n                vec3  n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n                return dot( n, vec3(70.0) );\n            }\n\n            float random(float n) {\n                return fract(sin(n) * 43758.5453123);\n            }\n\n            void main() {\n\t\t\t\tvColor = vec4(colorValues);\n\n\t\t\t\tvUv = uv;\n\n\t\t\t\tvLum = 0.2126 * vColor.r + 0.7152 * vColor.g + 0.0722 * vColor.b;\n\t\t\t\tfloat sizeVar = vLum * uParticleSize + (sin(uNoiseTime + instancePosition.z) * 0.4);\n\n\t\t\t\tfloat burst = 0.0;\n\t\t\t\tvec2 explosionCenter = explosionValues.xy;\n\t\t\t\tfloat explosionTime = explosionValues.z;\n\t\t\t\tvec2 toExplosion = instancePosition.xy - explosionCenter;\n\t\t\t\tfloat explosionDistance = length(toExplosion);\n\n\t\t\t\tfloat randomAdjustValue = uRandomness;\n\n\t\t\t\tvEnlarged = 0.0;\n\n\t\t\t\tif (instancePosition.z > -1.0) {\n\t\t\t\t\tif (explosionDistance < uExplosionRadius && explosionTime >= 0.0 && (uExplosionTime - explosionTime) <= uMaxBurstDur * 3.1415926) {\n\t\t\t\t\t\tfloat t = (uExplosionTime - explosionTime);\n\t\t\t\t\t\trandomAdjustValue += sin(t / uMaxBurstDur) * uExplosionPower;\n\n\t\t\t\t\t\tif(uSizeChOnInter){\n\t\t\t\t\t\t\tfloat blurScale = uBlurScale / 50.0;\n\t\t\t\t\t\t\tsizeVar += sin(t / uMaxBurstDur) * blurScale;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvEnlarged = 1.0;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(uFxOn){\n\t\t\t\t\tif(uFxOnlyOnInter && vEnlarged == 1.0){\n\t\t\t\t\t\tfloat blurScale = uBlurScale / 50.0;\n\t\t\t\t\t\tsizeVar += sizeVar * blurScale;\n\t\t\t\t\t}\n\t\t\t\t\tif(uFxOnlyOnInter == false){\n\t\t\t\t\t\tfloat blurScale = uBlurScale / 50.0;\n\t\t\t\t\t\tsizeVar += sizeVar * blurScale;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvec2 noiseOffset = vec2(noise(instancePosition.xy * 0.1 + uTime), noise(instancePosition.yx * 0.1 + uTime)) * randomAdjustValue;\n\n\t\t\t\tvec3 newPosition = ((position * sizeVar) + vec3(noiseOffset + toExplosion * burst, 0.0)) + vec3(instancePosition.xy, 0.0);\n\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition.xy, 0.0, 1.0);\n\t\t\t}\n        ",t_fragmentshader:"\n            varying vec4 vColor;\n            varying float vLum;\n\t\t\tvarying vec2 vUv;\n\t\t\tvarying float vEnlarged;\n\n\t\t\tuniform float uLuminaBoost;\n\t\t\tuniform float uDarkLimit;\n\t\t\tuniform bool uColorTrue;\n\t\t\tuniform bool uFxOn;\n\t\t\tuniform float uBlurScale;\n\t\t\tuniform bool uFxOnlyOnInter;\n\n            void main() {\n\t\t\t\tvec2 coord = vUv - vec2(0.5);\n\t\t\t\tfloat distance = length(coord);\n\t\t\t\tfloat blurScale = (1.0 - uBlurScale / 100.0) * 0.64;\n\t\t\t\tfloat opacity = smoothstep(0.65, blurScale, distance);\n\n\t\t\t\tfloat opacityVal = vColor.a;\n\n\t\t\t\tif(uFxOn){\n\t\t\t\t\tif(uFxOnlyOnInter && vEnlarged == 1.0){\n\t\t\t\t\t\topacityVal = opacity;\n\t\t\t\t\t}\n\t\t\t\t\tif(uFxOnlyOnInter == false){\n\t\t\t\t\t\topacityVal = opacity;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\n\t\t\t\tif(uColorTrue){\n\t\t\t\t\tgl_FragColor = vec4(vColor.rgb + vec3(uLuminaBoost), opacityVal);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tgl_FragColor = vec4(vec3(vLum + uLuminaBoost), opacityVal);\n\t\t\t\t}                \n\n\t\t\t\tif(vLum < uDarkLimit){\n\t\t\t\t\tgl_FragColor = vec4(0.0);\n\t\t\t\t}\n            }\n        "},_tpt.R??={},_tpt.R.sb_Shaders=_tpt.extend?_tpt.extend(_tpt.R.sb_Shaders,{status:2,version:"1.0"}):{status:2,version:"1.0"},window.dispatchEvent(new CustomEvent("SR7ShapeBurstShadersLoaded")))}();
!function(){"use strict";window.SR7??={},window._tpt??={},SR7.A??={},SR7.F??={},SR7.D??={},void 0===(SR7.A.shapeburst?.tools??void 0)&&(SR7.A.shapeburst={...SR7.A.shapeburst,tools:{}},_tpt.R??={},_tpt.R.sb_Tools=_tpt.extend?_tpt.extend(_tpt.R.sb_Tools,{status:2,version:"1.0"}):{status:2,version:"1.0"},window.dispatchEvent(new CustomEvent("SR7ShapeBurstToolsLoaded")))}();